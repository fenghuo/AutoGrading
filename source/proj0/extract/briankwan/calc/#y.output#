State 21 conflicts: 1 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statements Statement
    3           | Statement

    4 Statement: Label
    5          | Jump
    6          | Assignment
    7          | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' 'n'
   10     | 'g' 'n' 'i' Expression

   11 Assignment: 'm' '[' Expression ']' '=' Expression

   12 Print: 'p' Expression

   13 Expression: B H

   14 H: '+' B H
   15  | '-' B H
   16  | /* empty */

   17 B: C I

   18 I: '*' C I
   19  | '/' C I
   20  | /* empty */

   21 C: D J

   22 J: 'e' D J
   23  | /* empty */

   24 D: F K

   25 K: '(' Expression ')'
   26  | /* empty */

   27 F: G L

   28 L: 'm' '[' Expression ']'
   29  | /* empty */

   30 G: 'n'
   31  | /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 25
')' (41) 25
'*' (42) 18
'+' (43) 14
'-' (45) 15
'/' (47) 19
':' (58) 8
'=' (61) 11
'[' (91) 11 28
']' (93) 11 28
'e' (101) 22
'g' (103) 9 10
'i' (105) 10
'l' (108) 8
'm' (109) 11 28
'n' (110) 8 9 10 30
'p' (112) 12
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 2
Statement (23)
    on left: 4 5 6 7, on right: 2 3
Label (24)
    on left: 8, on right: 4
Jump (25)
    on left: 9 10, on right: 5
Assignment (26)
    on left: 11, on right: 6
Print (27)
    on left: 12, on right: 7
Expression (28)
    on left: 13, on right: 10 11 12 25 28
H (29)
    on left: 14 15 16, on right: 13 14 15
B (30)
    on left: 17, on right: 13 14 15
I (31)
    on left: 18 19 20, on right: 17 18 19
C (32)
    on left: 21, on right: 17 18 19
J (33)
    on left: 22 23, on right: 21 22
D (34)
    on left: 24, on right: 21 22
K (35)
    on left: 25 26, on right: 24
F (36)
    on left: 27, on right: 24
L (37)
    on left: 28 29, on right: 27
G (38)
    on left: 30 31, on right: 27


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

    9 Jump: 'g' . 'n'
   10     | 'g' . 'n' 'i' Expression

    'n'  shift, and go to state 13


state 3

   11 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   12 Print: 'p' . Expression

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    Expression  go to state 16
    B           go to state 17
    C           go to state 18
    D           go to state 19
    F           go to state 20
    G           go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statements .
    2 Statements: Statements . Statement

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 1 (Start)

    Statement   go to state 23
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 7

    3 Statements: Statement .

    $default  reduce using rule 3 (Statements)


state 8

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 9

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 10

    6 Statement: Assignment .

    $default  reduce using rule 6 (Statement)


state 11

    7 Statement: Print .

    $default  reduce using rule 7 (Statement)


state 12

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 24


state 13

    9 Jump: 'g' 'n' .
   10     | 'g' 'n' . 'i' Expression

    'i'  shift, and go to state 25

    $default  reduce using rule 9 (Jump)


state 14

   11 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    Expression  go to state 26
    B           go to state 17
    C           go to state 18
    D           go to state 19
    F           go to state 20
    G           go to state 21


state 15

   30 G: 'n' .

    $default  reduce using rule 30 (G)


state 16

   12 Print: 'p' Expression .

    $default  reduce using rule 12 (Print)


state 17

   13 Expression: B . H

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 16 (H)

    H  go to state 29


state 18

   17 B: C . I

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 20 (I)

    I  go to state 32


state 19

   21 C: D . J

    'e'  shift, and go to state 33

    $default  reduce using rule 23 (J)

    J  go to state 34


state 20

   24 D: F . K

    '('  shift, and go to state 35

    $default  reduce using rule 26 (K)

    K  go to state 36


state 21

   27 F: G . L

    'm'  shift, and go to state 37

    'm'       [reduce using rule 29 (L)]
    $default  reduce using rule 29 (L)

    L  go to state 38


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    2 Statements: Statements Statement .

    $default  reduce using rule 2 (Statements)


state 24

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 25

   10 Jump: 'g' 'n' 'i' . Expression

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    Expression  go to state 39
    B           go to state 17
    C           go to state 18
    D           go to state 19
    F           go to state 20
    G           go to state 21


state 26

   11 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 40


state 27

   14 H: '+' . B H

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    B  go to state 41
    C  go to state 18
    D  go to state 19
    F  go to state 20
    G  go to state 21


state 28

   15 H: '-' . B H

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    B  go to state 42
    C  go to state 18
    D  go to state 19
    F  go to state 20
    G  go to state 21


state 29

   13 Expression: B H .

    $default  reduce using rule 13 (Expression)


state 30

   18 I: '*' . C I

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    C  go to state 43
    D  go to state 19
    F  go to state 20
    G  go to state 21


state 31

   19 I: '/' . C I

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    C  go to state 44
    D  go to state 19
    F  go to state 20
    G  go to state 21


state 32

   17 B: C I .

    $default  reduce using rule 17 (B)


state 33

   22 J: 'e' . D J

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    D  go to state 45
    F  go to state 20
    G  go to state 21


state 34

   21 C: D J .

    $default  reduce using rule 21 (C)


state 35

   25 K: '(' . Expression ')'

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    Expression  go to state 46
    B           go to state 17
    C           go to state 18
    D           go to state 19
    F           go to state 20
    G           go to state 21


state 36

   24 D: F K .

    $default  reduce using rule 24 (D)


state 37

   28 L: 'm' . '[' Expression ']'

    '['  shift, and go to state 47


state 38

   27 F: G L .

    $default  reduce using rule 27 (F)


state 39

   10 Jump: 'g' 'n' 'i' Expression .

    $default  reduce using rule 10 (Jump)


state 40

   11 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 48


state 41

   14 H: '+' B . H

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 16 (H)

    H  go to state 49


state 42

   15 H: '-' B . H

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 16 (H)

    H  go to state 50


state 43

   18 I: '*' C . I

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 20 (I)

    I  go to state 51


state 44

   19 I: '/' C . I

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 20 (I)

    I  go to state 52


state 45

   22 J: 'e' D . J

    'e'  shift, and go to state 33

    $default  reduce using rule 23 (J)

    J  go to state 53


state 46

   25 K: '(' Expression . ')'

    ')'  shift, and go to state 54


state 47

   28 L: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    Expression  go to state 55
    B           go to state 17
    C           go to state 18
    D           go to state 19
    F           go to state 20
    G           go to state 21


state 48

   11 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15

    $default  reduce using rule 31 (G)

    Expression  go to state 56
    B           go to state 17
    C           go to state 18
    D           go to state 19
    F           go to state 20
    G           go to state 21


state 49

   14 H: '+' B H .

    $default  reduce using rule 14 (H)


state 50

   15 H: '-' B H .

    $default  reduce using rule 15 (H)


state 51

   18 I: '*' C I .

    $default  reduce using rule 18 (I)


state 52

   19 I: '/' C I .

    $default  reduce using rule 19 (I)


state 53

   22 J: 'e' D J .

    $default  reduce using rule 22 (J)


state 54

   25 K: '(' Expression ')' .

    $default  reduce using rule 25 (K)


state 55

   28 L: 'm' '[' Expression . ']'

    ']'  shift, and go to state 57


state 56

   11 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 11 (Assignment)


state 57

   28 L: 'm' '[' Expression ']' .

    $default  reduce using rule 28 (L)
