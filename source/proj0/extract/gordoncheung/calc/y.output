Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statements Statement
    3           | Statement

    4 Statement: Label
    5          | Jump
    6          | Assignment
    7          | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' 'n'
   10     | 'g' 'n' 'i' Expression

   11 Assignment: 'm' '[' Expression ']' '=' Expression

   12 Print: 'p' Expression

   13 Expression: T Exp

   14 Exp: '+' T Exp
   15    | '-' T Exp
   16    | /* empty */

   17 T: M Tn

   18 Tn: '*' M Tn
   19   | '/' M Tn
   20   | /* empty */

   21 M: P Mn

   22 Mn: 'e' P Mn
   23   | /* empty */

   24 P: '(' Expression ')'
   25  | 'm' '[' Expression ']'
   26  | 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24
')' (41) 24
'*' (42) 18
'+' (43) 14
'-' (45) 15
'/' (47) 19
':' (58) 8
'=' (61) 11
'[' (91) 11 25
']' (93) 11 25
'e' (101) 22
'g' (103) 9 10
'i' (105) 10
'l' (108) 8
'm' (109) 11 25
'n' (110) 8 9 10 26
'p' (112) 12
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 2
Statement (23)
    on left: 4 5 6 7, on right: 2 3
Label (24)
    on left: 8, on right: 4
Jump (25)
    on left: 9 10, on right: 5
Assignment (26)
    on left: 11, on right: 6
Print (27)
    on left: 12, on right: 7
Expression (28)
    on left: 13, on right: 10 11 12 24 25
Exp (29)
    on left: 14 15 16, on right: 13 14 15
T (30)
    on left: 17, on right: 13 14 15
Tn (31)
    on left: 18 19 20, on right: 17 18 19
M (32)
    on left: 21, on right: 17 18 19
Mn (33)
    on left: 22 23, on right: 21 22
P (34)
    on left: 24 25 26, on right: 21 22


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

    9 Jump: 'g' . 'n'
   10     | 'g' . 'n' 'i' Expression

    'n'  shift, and go to state 13


state 3

   11 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   12 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 18
    T           go to state 19
    M           go to state 20
    P           go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statements .
    2 Statements: Statements . Statement

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 1 (Start)

    Statement   go to state 23
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 7

    3 Statements: Statement .

    $default  reduce using rule 3 (Statements)


state 8

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 9

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 10

    6 Statement: Assignment .

    $default  reduce using rule 6 (Statement)


state 11

    7 Statement: Print .

    $default  reduce using rule 7 (Statement)


state 12

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 24


state 13

    9 Jump: 'g' 'n' .
   10     | 'g' 'n' . 'i' Expression

    'i'  shift, and go to state 25

    $default  reduce using rule 9 (Jump)


state 14

   11 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 26
    T           go to state 19
    M           go to state 20
    P           go to state 21


state 15

   26 P: 'n' .

    $default  reduce using rule 26 (P)


state 16

   25 P: 'm' . '[' Expression ']'

    '['  shift, and go to state 27


state 17

   24 P: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 28
    T           go to state 19
    M           go to state 20
    P           go to state 21


state 18

   12 Print: 'p' Expression .

    $default  reduce using rule 12 (Print)


state 19

   13 Expression: T . Exp

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 16 (Exp)

    Exp  go to state 31


state 20

   17 T: M . Tn

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 20 (Tn)

    Tn  go to state 34


state 21

   21 M: P . Mn

    'e'  shift, and go to state 35

    $default  reduce using rule 23 (Mn)

    Mn  go to state 36


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    2 Statements: Statements Statement .

    $default  reduce using rule 2 (Statements)


state 24

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 25

   10 Jump: 'g' 'n' 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 37
    T           go to state 19
    M           go to state 20
    P           go to state 21


state 26

   11 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 38


state 27

   25 P: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 39
    T           go to state 19
    M           go to state 20
    P           go to state 21


state 28

   24 P: '(' Expression . ')'

    ')'  shift, and go to state 40


state 29

   14 Exp: '+' . T Exp

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    T  go to state 41
    M  go to state 20
    P  go to state 21


state 30

   15 Exp: '-' . T Exp

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    T  go to state 42
    M  go to state 20
    P  go to state 21


state 31

   13 Expression: T Exp .

    $default  reduce using rule 13 (Expression)


state 32

   18 Tn: '*' . M Tn

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    M  go to state 43
    P  go to state 21


state 33

   19 Tn: '/' . M Tn

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    M  go to state 44
    P  go to state 21


state 34

   17 T: M Tn .

    $default  reduce using rule 17 (T)


state 35

   22 Mn: 'e' . P Mn

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    P  go to state 45


state 36

   21 M: P Mn .

    $default  reduce using rule 21 (M)


state 37

   10 Jump: 'g' 'n' 'i' Expression .

    $default  reduce using rule 10 (Jump)


state 38

   11 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 46


state 39

   25 P: 'm' '[' Expression . ']'

    ']'  shift, and go to state 47


state 40

   24 P: '(' Expression ')' .

    $default  reduce using rule 24 (P)


state 41

   14 Exp: '+' T . Exp

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 16 (Exp)

    Exp  go to state 48


state 42

   15 Exp: '-' T . Exp

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 16 (Exp)

    Exp  go to state 49


state 43

   18 Tn: '*' M . Tn

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 20 (Tn)

    Tn  go to state 50


state 44

   19 Tn: '/' M . Tn

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 20 (Tn)

    Tn  go to state 51


state 45

   22 Mn: 'e' P . Mn

    'e'  shift, and go to state 35

    $default  reduce using rule 23 (Mn)

    Mn  go to state 52


state 46

   11 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 53
    T           go to state 19
    M           go to state 20
    P           go to state 21


state 47

   25 P: 'm' '[' Expression ']' .

    $default  reduce using rule 25 (P)


state 48

   14 Exp: '+' T Exp .

    $default  reduce using rule 14 (Exp)


state 49

   15 Exp: '-' T Exp .

    $default  reduce using rule 15 (Exp)


state 50

   18 Tn: '*' M Tn .

    $default  reduce using rule 18 (Tn)


state 51

   19 Tn: '/' M Tn .

    $default  reduce using rule 19 (Tn)


state 52

   22 Mn: 'e' P Mn .

    $default  reduce using rule 22 (Mn)


state 53

   11 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 11 (Assignment)
