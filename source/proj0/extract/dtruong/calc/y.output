Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statements Statement
    3           | Statement

    4 Statement: Label
    5          | Jump
    6          | Assignment
    7          | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' 'n' JumpCheck

   10 JumpCheck: 'i' Expression
   11          | /* empty */

   12 Assignment: 'm' '[' Expression ']' '=' Expression

   13 Print: 'p' Expression

   14 Expression: Term Expression2

   15 Expression2: '+' Expression
   16            | '-' Expression
   17            | /* empty */

   18 Term: Power Term2

   19 Term2: '*' Term
   20      | '/' Term
   21      | /* empty */

   22 Power: Factor Power2

   23 Power2: 'e' Power
   24       | /* empty */

   25 Factor: 'n'
   26       | '(' Expression ')'
   27       | 'm' '[' Expression ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 26
')' (41) 26
'*' (42) 19
'+' (43) 15
'-' (45) 16
'/' (47) 20
':' (58) 8
'=' (61) 12
'[' (91) 12 27
']' (93) 12 27
'e' (101) 23
'g' (103) 9
'i' (105) 10
'l' (108) 8
'm' (109) 12 27
'n' (110) 8 9 25
'p' (112) 13
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 2
Statement (23)
    on left: 4 5 6 7, on right: 2 3
Label (24)
    on left: 8, on right: 4
Jump (25)
    on left: 9, on right: 5
JumpCheck (26)
    on left: 10 11, on right: 9
Assignment (27)
    on left: 12, on right: 6
Print (28)
    on left: 13, on right: 7
Expression (29)
    on left: 14, on right: 10 12 13 15 16 26 27
Expression2 (30)
    on left: 15 16 17, on right: 14
Term (31)
    on left: 18, on right: 14 19 20
Term2 (32)
    on left: 19 20 21, on right: 18
Power (33)
    on left: 22, on right: 18 23
Power2 (34)
    on left: 23 24, on right: 22
Factor (35)
    on left: 25 26 27, on right: 22


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

    9 Jump: 'g' . 'n' JumpCheck

    'n'  shift, and go to state 13


state 3

   12 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   13 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 18
    Term        go to state 19
    Power       go to state 20
    Factor      go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statements .
    2 Statements: Statements . Statement

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 1 (Start)

    Statement   go to state 23
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 7

    3 Statements: Statement .

    $default  reduce using rule 3 (Statements)


state 8

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 9

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 10

    6 Statement: Assignment .

    $default  reduce using rule 6 (Statement)


state 11

    7 Statement: Print .

    $default  reduce using rule 7 (Statement)


state 12

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 24


state 13

    9 Jump: 'g' 'n' . JumpCheck

    'i'  shift, and go to state 25

    $default  reduce using rule 11 (JumpCheck)

    JumpCheck  go to state 26


state 14

   12 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 27
    Term        go to state 19
    Power       go to state 20
    Factor      go to state 21


state 15

   25 Factor: 'n' .

    $default  reduce using rule 25 (Factor)


state 16

   27 Factor: 'm' . '[' Expression ']'

    '['  shift, and go to state 28


state 17

   26 Factor: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 29
    Term        go to state 19
    Power       go to state 20
    Factor      go to state 21


state 18

   13 Print: 'p' Expression .

    $default  reduce using rule 13 (Print)


state 19

   14 Expression: Term . Expression2

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 17 (Expression2)

    Expression2  go to state 32


state 20

   18 Term: Power . Term2

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 21 (Term2)

    Term2  go to state 35


state 21

   22 Power: Factor . Power2

    'e'  shift, and go to state 36

    $default  reduce using rule 24 (Power2)

    Power2  go to state 37


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    2 Statements: Statements Statement .

    $default  reduce using rule 2 (Statements)


state 24

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 25

   10 JumpCheck: 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 38
    Term        go to state 19
    Power       go to state 20
    Factor      go to state 21


state 26

    9 Jump: 'g' 'n' JumpCheck .

    $default  reduce using rule 9 (Jump)


state 27

   12 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 39


state 28

   27 Factor: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 40
    Term        go to state 19
    Power       go to state 20
    Factor      go to state 21


state 29

   26 Factor: '(' Expression . ')'

    ')'  shift, and go to state 41


state 30

   15 Expression2: '+' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 42
    Term        go to state 19
    Power       go to state 20
    Factor      go to state 21


state 31

   16 Expression2: '-' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 43
    Term        go to state 19
    Power       go to state 20
    Factor      go to state 21


state 32

   14 Expression: Term Expression2 .

    $default  reduce using rule 14 (Expression)


state 33

   19 Term2: '*' . Term

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term    go to state 44
    Power   go to state 20
    Factor  go to state 21


state 34

   20 Term2: '/' . Term

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term    go to state 45
    Power   go to state 20
    Factor  go to state 21


state 35

   18 Term: Power Term2 .

    $default  reduce using rule 18 (Term)


state 36

   23 Power2: 'e' . Power

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Power   go to state 46
    Factor  go to state 21


state 37

   22 Power: Factor Power2 .

    $default  reduce using rule 22 (Power)


state 38

   10 JumpCheck: 'i' Expression .

    $default  reduce using rule 10 (JumpCheck)


state 39

   12 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 47


state 40

   27 Factor: 'm' '[' Expression . ']'

    ']'  shift, and go to state 48


state 41

   26 Factor: '(' Expression ')' .

    $default  reduce using rule 26 (Factor)


state 42

   15 Expression2: '+' Expression .

    $default  reduce using rule 15 (Expression2)


state 43

   16 Expression2: '-' Expression .

    $default  reduce using rule 16 (Expression2)


state 44

   19 Term2: '*' Term .

    $default  reduce using rule 19 (Term2)


state 45

   20 Term2: '/' Term .

    $default  reduce using rule 20 (Term2)


state 46

   23 Power2: 'e' Power .

    $default  reduce using rule 23 (Power2)


state 47

   12 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 49
    Term        go to state 19
    Power       go to state 20
    Factor      go to state 21


state 48

   27 Factor: 'm' '[' Expression ']' .

    $default  reduce using rule 27 (Factor)


state 49

   12 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 12 (Assignment)
