Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statement StatementP

    3 StatementP: Statement StatementP
    4           | /* empty */

    5 Statement: Label
    6          | Jump
    7          | Assignment
    8          | Print

    9 Label: 'l' 'n' ':'

   10 Jump: 'g' 'n'
   11     | 'g' 'n' 'i' Expression

   12 Assignment: MExp '=' Expression

   13 Print: 'p' MExp

   14 Expression: Term AddSub

   15 AddSub: '+' Term AddSub
   16       | '-' Term AddSub
   17       | /* empty */

   18 MultDiv: '*' Factor MultDiv
   19        | '/' Factor MultDiv
   20        | /* empty */

   21 Term: Factor MultDiv
   22     | MExp

   23 Factor: Parens EXP

   24 Parens: '(' Expression ')'
   25       | 'n'

   26 MExp: 'm' '[' Expression ']'

   27 EXP: 'e' Parens EXP
   28    | /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24
')' (41) 24
'*' (42) 18
'+' (43) 15
'-' (45) 16
'/' (47) 19
':' (58) 9
'=' (61) 12
'[' (91) 26
']' (93) 26
'e' (101) 27
'g' (103) 10 11
'i' (105) 11
'l' (108) 9
'm' (109) 26
'n' (110) 9 10 11 25
'p' (112) 13
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2, on right: 1
StatementP (23)
    on left: 3 4, on right: 2 3
Statement (24)
    on left: 5 6 7 8, on right: 2 3
Label (25)
    on left: 9, on right: 5
Jump (26)
    on left: 10 11, on right: 6
Assignment (27)
    on left: 12, on right: 7
Print (28)
    on left: 13, on right: 8
Expression (29)
    on left: 14, on right: 11 12 24 26
AddSub (30)
    on left: 15 16 17, on right: 14 15 16
MultDiv (31)
    on left: 18 19 20, on right: 18 19 21
Term (32)
    on left: 21 22, on right: 14 15 16
Factor (33)
    on left: 23, on right: 18 19 21
Parens (34)
    on left: 24 25, on right: 23 27
MExp (35)
    on left: 26, on right: 12 13 22
EXP (36)
    on left: 27 28, on right: 23 27


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'p'  shift, and go to state 3
    'm'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11
    MExp        go to state 12


state 1

    9 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 13


state 2

   10 Jump: 'g' . 'n'
   11     | 'g' . 'n' 'i' Expression

    'n'  shift, and go to state 14


state 3

   13 Print: 'p' . MExp

    'm'  shift, and go to state 4

    MExp  go to state 15


state 4

   26 MExp: 'm' . '[' Expression ']'

    '['  shift, and go to state 16


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 17


state 6

    1 Start: Statements .

    $default  reduce using rule 1 (Start)


state 7

    2 Statements: Statement . StatementP

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'p'  shift, and go to state 3
    'm'  shift, and go to state 4

    $default  reduce using rule 4 (StatementP)

    StatementP  go to state 18
    Statement   go to state 19
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11
    MExp        go to state 12


state 8

    5 Statement: Label .

    $default  reduce using rule 5 (Statement)


state 9

    6 Statement: Jump .

    $default  reduce using rule 6 (Statement)


state 10

    7 Statement: Assignment .

    $default  reduce using rule 7 (Statement)


state 11

    8 Statement: Print .

    $default  reduce using rule 8 (Statement)


state 12

   12 Assignment: MExp . '=' Expression

    '='  shift, and go to state 20


state 13

    9 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 21


state 14

   10 Jump: 'g' 'n' .
   11     | 'g' 'n' . 'i' Expression

    'i'  shift, and go to state 22

    $default  reduce using rule 10 (Jump)


state 15

   13 Print: 'p' MExp .

    $default  reduce using rule 13 (Print)


state 16

   26 MExp: 'm' '[' . Expression ']'

    'n'  shift, and go to state 23
    '('  shift, and go to state 24
    'm'  shift, and go to state 4

    Expression  go to state 25
    Term        go to state 26
    Factor      go to state 27
    Parens      go to state 28
    MExp        go to state 29


state 17

    0 $accept: Start $end .

    $default  accept


state 18

    2 Statements: Statement StatementP .

    $default  reduce using rule 2 (Statements)


state 19

    3 StatementP: Statement . StatementP

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'p'  shift, and go to state 3
    'm'  shift, and go to state 4

    $default  reduce using rule 4 (StatementP)

    StatementP  go to state 30
    Statement   go to state 19
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11
    MExp        go to state 12


state 20

   12 Assignment: MExp '=' . Expression

    'n'  shift, and go to state 23
    '('  shift, and go to state 24
    'm'  shift, and go to state 4

    Expression  go to state 31
    Term        go to state 26
    Factor      go to state 27
    Parens      go to state 28
    MExp        go to state 29


state 21

    9 Label: 'l' 'n' ':' .

    $default  reduce using rule 9 (Label)


state 22

   11 Jump: 'g' 'n' 'i' . Expression

    'n'  shift, and go to state 23
    '('  shift, and go to state 24
    'm'  shift, and go to state 4

    Expression  go to state 32
    Term        go to state 26
    Factor      go to state 27
    Parens      go to state 28
    MExp        go to state 29


state 23

   25 Parens: 'n' .

    $default  reduce using rule 25 (Parens)


state 24

   24 Parens: '(' . Expression ')'

    'n'  shift, and go to state 23
    '('  shift, and go to state 24
    'm'  shift, and go to state 4

    Expression  go to state 33
    Term        go to state 26
    Factor      go to state 27
    Parens      go to state 28
    MExp        go to state 29


state 25

   26 MExp: 'm' '[' Expression . ']'

    ']'  shift, and go to state 34


state 26

   14 Expression: Term . AddSub

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 17 (AddSub)

    AddSub  go to state 37


state 27

   21 Term: Factor . MultDiv

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 20 (MultDiv)

    MultDiv  go to state 40


state 28

   23 Factor: Parens . EXP

    'e'  shift, and go to state 41

    $default  reduce using rule 28 (EXP)

    EXP  go to state 42


state 29

   22 Term: MExp .

    $default  reduce using rule 22 (Term)


state 30

    3 StatementP: Statement StatementP .

    $default  reduce using rule 3 (StatementP)


state 31

   12 Assignment: MExp '=' Expression .

    $default  reduce using rule 12 (Assignment)


state 32

   11 Jump: 'g' 'n' 'i' Expression .

    $default  reduce using rule 11 (Jump)


state 33

   24 Parens: '(' Expression . ')'

    ')'  shift, and go to state 43


state 34

   26 MExp: 'm' '[' Expression ']' .

    $default  reduce using rule 26 (MExp)


state 35

   15 AddSub: '+' . Term AddSub

    'n'  shift, and go to state 23
    '('  shift, and go to state 24
    'm'  shift, and go to state 4

    Term    go to state 44
    Factor  go to state 27
    Parens  go to state 28
    MExp    go to state 29


state 36

   16 AddSub: '-' . Term AddSub

    'n'  shift, and go to state 23
    '('  shift, and go to state 24
    'm'  shift, and go to state 4

    Term    go to state 45
    Factor  go to state 27
    Parens  go to state 28
    MExp    go to state 29


state 37

   14 Expression: Term AddSub .

    $default  reduce using rule 14 (Expression)


state 38

   18 MultDiv: '*' . Factor MultDiv

    'n'  shift, and go to state 23
    '('  shift, and go to state 24

    Factor  go to state 46
    Parens  go to state 28


state 39

   19 MultDiv: '/' . Factor MultDiv

    'n'  shift, and go to state 23
    '('  shift, and go to state 24

    Factor  go to state 47
    Parens  go to state 28


state 40

   21 Term: Factor MultDiv .

    $default  reduce using rule 21 (Term)


state 41

   27 EXP: 'e' . Parens EXP

    'n'  shift, and go to state 23
    '('  shift, and go to state 24

    Parens  go to state 48


state 42

   23 Factor: Parens EXP .

    $default  reduce using rule 23 (Factor)


state 43

   24 Parens: '(' Expression ')' .

    $default  reduce using rule 24 (Parens)


state 44

   15 AddSub: '+' Term . AddSub

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 17 (AddSub)

    AddSub  go to state 49


state 45

   16 AddSub: '-' Term . AddSub

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 17 (AddSub)

    AddSub  go to state 50


state 46

   18 MultDiv: '*' Factor . MultDiv

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 20 (MultDiv)

    MultDiv  go to state 51


state 47

   19 MultDiv: '/' Factor . MultDiv

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 20 (MultDiv)

    MultDiv  go to state 52


state 48

   27 EXP: 'e' Parens . EXP

    'e'  shift, and go to state 41

    $default  reduce using rule 28 (EXP)

    EXP  go to state 53


state 49

   15 AddSub: '+' Term AddSub .

    $default  reduce using rule 15 (AddSub)


state 50

   16 AddSub: '-' Term AddSub .

    $default  reduce using rule 16 (AddSub)


state 51

   18 MultDiv: '*' Factor MultDiv .

    $default  reduce using rule 18 (MultDiv)


state 52

   19 MultDiv: '/' Factor MultDiv .

    $default  reduce using rule 19 (MultDiv)


state 53

   27 EXP: 'e' Parens EXP .

    $default  reduce using rule 27 (EXP)
