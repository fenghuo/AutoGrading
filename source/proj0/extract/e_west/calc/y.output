State 21 conflicts: 1 shift/reduce
State 42 conflicts: 13 reduce/reduce
State 48 conflicts: 1 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statement S_

    3 S_: Statements
    4   | /* empty */

    5 Statement: Label
    6          | Jump
    7          | Assignment
    8          | Print

    9 Label: 'l' 'n' ':'

   10 Jump: 'g' 'n' J_

   11 J_: 'i' Expression

   12 Assignment: 'm' '[' Expression ']' '=' Expression

   13 Print: 'p' Expression

   14 Expression: Term E_

   15 E_: '+' Term Expression
   16   | '-' Term Expression
   17   | /* empty */

   18 Term: Factor T_

   19 T_: '*' Factor T_
   20   | '/' Factor T_
   21   | /* empty */

   22 Factor: Base Exponent
   23       | '(' Expression ')'

   24 Exponent: '*' Base Exponent
   25         | /* empty */

   26 Base: 'n'
   27     | 'm' '[' Expression ']'
   28     | '(' Expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 28
')' (41) 23 28
'*' (42) 19 24
'+' (43) 15
'-' (45) 16
'/' (47) 20
':' (58) 9
'=' (61) 12
'[' (91) 12 27
']' (93) 12 27
'g' (103) 10
'i' (105) 11
'l' (108) 9
'm' (109) 12 27
'n' (110) 9 10 26
'p' (112) 13
error (256)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
Start (20)
    on left: 1, on right: 0
Statements (21)
    on left: 2, on right: 1 3
S_ (22)
    on left: 3 4, on right: 2
Statement (23)
    on left: 5 6 7 8, on right: 2
Label (24)
    on left: 9, on right: 5
Jump (25)
    on left: 10, on right: 6
J_ (26)
    on left: 11, on right: 10
Assignment (27)
    on left: 12, on right: 7
Print (28)
    on left: 13, on right: 8
Expression (29)
    on left: 14, on right: 11 12 13 15 16 23 27 28
E_ (30)
    on left: 15 16 17, on right: 14
Term (31)
    on left: 18, on right: 14 15 16
T_ (32)
    on left: 19 20 21, on right: 18 19 20
Factor (33)
    on left: 22 23, on right: 18 19 20
Exponent (34)
    on left: 24 25, on right: 22 24
Base (35)
    on left: 26 27 28, on right: 22 24


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    9 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

   10 Jump: 'g' . 'n' J_

    'n'  shift, and go to state 13


state 3

   12 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   13 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 18
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statements .

    $default  reduce using rule 1 (Start)


state 7

    2 Statements: Statement . S_

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 4 (S_)

    Statements  go to state 23
    S_          go to state 24
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 8

    5 Statement: Label .

    $default  reduce using rule 5 (Statement)


state 9

    6 Statement: Jump .

    $default  reduce using rule 6 (Statement)


state 10

    7 Statement: Assignment .

    $default  reduce using rule 7 (Statement)


state 11

    8 Statement: Print .

    $default  reduce using rule 8 (Statement)


state 12

    9 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 25


state 13

   10 Jump: 'g' 'n' . J_

    'i'  shift, and go to state 26

    J_  go to state 27


state 14

   12 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 28
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 15

   26 Base: 'n' .

    $default  reduce using rule 26 (Base)


state 16

   27 Base: 'm' . '[' Expression ']'

    '['  shift, and go to state 29


state 17

   23 Factor: '(' . Expression ')'
   28 Base: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 30
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 18

   13 Print: 'p' Expression .

    $default  reduce using rule 13 (Print)


state 19

   14 Expression: Term . E_

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32

    $default  reduce using rule 17 (E_)

    E_  go to state 33


state 20

   18 Term: Factor . T_

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 21 (T_)

    T_  go to state 36


state 21

   22 Factor: Base . Exponent

    '*'  shift, and go to state 37

    '*'       [reduce using rule 25 (Exponent)]
    $default  reduce using rule 25 (Exponent)

    Exponent  go to state 38


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    3 S_: Statements .

    $default  reduce using rule 3 (S_)


state 24

    2 Statements: Statement S_ .

    $default  reduce using rule 2 (Statements)


state 25

    9 Label: 'l' 'n' ':' .

    $default  reduce using rule 9 (Label)


state 26

   11 J_: 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 39
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 27

   10 Jump: 'g' 'n' J_ .

    $default  reduce using rule 10 (Jump)


state 28

   12 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 40


state 29

   27 Base: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 41
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 30

   23 Factor: '(' Expression . ')'
   28 Base: '(' Expression . ')'

    ')'  shift, and go to state 42


state 31

   15 E_: '+' . Term Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term    go to state 43
    Factor  go to state 20
    Base    go to state 21


state 32

   16 E_: '-' . Term Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term    go to state 44
    Factor  go to state 20
    Base    go to state 21


state 33

   14 Expression: Term E_ .

    $default  reduce using rule 14 (Expression)


state 34

   19 T_: '*' . Factor T_

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Factor  go to state 45
    Base    go to state 21


state 35

   20 T_: '/' . Factor T_

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Factor  go to state 46
    Base    go to state 21


state 36

   18 Term: Factor T_ .

    $default  reduce using rule 18 (Term)


state 37

   24 Exponent: '*' . Base Exponent

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 47

    Base  go to state 48


state 38

   22 Factor: Base Exponent .

    $default  reduce using rule 22 (Factor)


state 39

   11 J_: 'i' Expression .

    $default  reduce using rule 11 (J_)


state 40

   12 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 49


state 41

   27 Base: 'm' '[' Expression . ']'

    ']'  shift, and go to state 50


state 42

   23 Factor: '(' Expression ')' .
   28 Base: '(' Expression ')' .

    $end      reduce using rule 23 (Factor)
    $end      [reduce using rule 28 (Base)]
    'l'       reduce using rule 23 (Factor)
    'l'       [reduce using rule 28 (Base)]
    'n'       reduce using rule 23 (Factor)
    'n'       [reduce using rule 28 (Base)]
    'g'       reduce using rule 23 (Factor)
    'g'       [reduce using rule 28 (Base)]
    'm'       reduce using rule 23 (Factor)
    'm'       [reduce using rule 28 (Base)]
    ']'       reduce using rule 23 (Factor)
    ']'       [reduce using rule 28 (Base)]
    'p'       reduce using rule 23 (Factor)
    'p'       [reduce using rule 28 (Base)]
    '+'       reduce using rule 23 (Factor)
    '+'       [reduce using rule 28 (Base)]
    '-'       reduce using rule 23 (Factor)
    '-'       [reduce using rule 28 (Base)]
    '*'       reduce using rule 23 (Factor)
    '*'       [reduce using rule 28 (Base)]
    '/'       reduce using rule 23 (Factor)
    '/'       [reduce using rule 28 (Base)]
    '('       reduce using rule 23 (Factor)
    '('       [reduce using rule 28 (Base)]
    ')'       reduce using rule 23 (Factor)
    ')'       [reduce using rule 28 (Base)]
    $default  reduce using rule 23 (Factor)


state 43

   15 E_: '+' Term . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 51
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 44

   16 E_: '-' Term . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 52
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 45

   19 T_: '*' Factor . T_

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 21 (T_)

    T_  go to state 53


state 46

   20 T_: '/' Factor . T_

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 21 (T_)

    T_  go to state 54


state 47

   28 Base: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 55
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 48

   24 Exponent: '*' Base . Exponent

    '*'  shift, and go to state 37

    '*'       [reduce using rule 25 (Exponent)]
    $default  reduce using rule 25 (Exponent)

    Exponent  go to state 56


state 49

   12 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 57
    Term        go to state 19
    Factor      go to state 20
    Base        go to state 21


state 50

   27 Base: 'm' '[' Expression ']' .

    $default  reduce using rule 27 (Base)


state 51

   15 E_: '+' Term Expression .

    $default  reduce using rule 15 (E_)


state 52

   16 E_: '-' Term Expression .

    $default  reduce using rule 16 (E_)


state 53

   19 T_: '*' Factor T_ .

    $default  reduce using rule 19 (T_)


state 54

   20 T_: '/' Factor T_ .

    $default  reduce using rule 20 (T_)


state 55

   28 Base: '(' Expression . ')'

    ')'  shift, and go to state 58


state 56

   24 Exponent: '*' Base Exponent .

    $default  reduce using rule 24 (Exponent)


state 57

   12 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 12 (Assignment)


state 58

   28 Base: '(' Expression ')' .

    $default  reduce using rule 28 (Base)
