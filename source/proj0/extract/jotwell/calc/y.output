Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statement Sp

    3 Sp: Statement Sp
    4   | /* empty */

    5 Statement: Label
    6          | Jump
    7          | Assignment
    8          | Print

    9 Label: 'l' 'n' ':'

   10 Jump: 'g' 'n' Jp

   11 Jp: 'i' E
   12   | /* empty */

   13 Assignment: 'm' '[' E ']' '=' E

   14 Print: 'p' E

   15 E: M Ep

   16 Ep: '+' M Ep
   17   | '-' M Ep
   18   | /* empty */

   19 M: X Mp

   20 Mp: '*' X Mp
   21   | '/' X Mp
   22   | /* empty */

   23 X: P Xp

   24 Xp: 'e' P Xp
   25   | /* empty */

   26 P: '(' E ')'
   27  | id

   28 id: 'm' '[' E ']'
   29   | 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 26
')' (41) 26
'*' (42) 20
'+' (43) 16
'-' (45) 17
'/' (47) 21
':' (58) 9
'=' (61) 13
'[' (91) 13 28
']' (93) 13 28
'e' (101) 24
'g' (103) 10
'i' (105) 11
'l' (108) 9
'm' (109) 13 28
'n' (110) 9 10 29
'p' (112) 14
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2, on right: 1
Sp (23)
    on left: 3 4, on right: 2 3
Statement (24)
    on left: 5 6 7 8, on right: 2 3
Label (25)
    on left: 9, on right: 5
Jump (26)
    on left: 10, on right: 6
Jp (27)
    on left: 11 12, on right: 10
Assignment (28)
    on left: 13, on right: 7
Print (29)
    on left: 14, on right: 8
E (30)
    on left: 15, on right: 11 13 14 26 28
Ep (31)
    on left: 16 17 18, on right: 15 16 17
M (32)
    on left: 19, on right: 15 16 17
Mp (33)
    on left: 20 21 22, on right: 19 20 21
X (34)
    on left: 23, on right: 19 20 21
Xp (35)
    on left: 24 25, on right: 23 24
P (36)
    on left: 26 27, on right: 23 24
id (37)
    on left: 28 29, on right: 27


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    9 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

   10 Jump: 'g' . 'n' Jp

    'n'  shift, and go to state 13


state 3

   13 Assignment: 'm' . '[' E ']' '=' E

    '['  shift, and go to state 14


state 4

   14 Print: 'p' . E

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    E   go to state 18
    M   go to state 19
    X   go to state 20
    P   go to state 21
    id  go to state 22


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 23


state 6

    1 Start: Statements .

    $default  reduce using rule 1 (Start)


state 7

    2 Statements: Statement . Sp

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 4 (Sp)

    Sp          go to state 24
    Statement   go to state 25
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 8

    5 Statement: Label .

    $default  reduce using rule 5 (Statement)


state 9

    6 Statement: Jump .

    $default  reduce using rule 6 (Statement)


state 10

    7 Statement: Assignment .

    $default  reduce using rule 7 (Statement)


state 11

    8 Statement: Print .

    $default  reduce using rule 8 (Statement)


state 12

    9 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 26


state 13

   10 Jump: 'g' 'n' . Jp

    'i'  shift, and go to state 27

    $default  reduce using rule 12 (Jp)

    Jp  go to state 28


state 14

   13 Assignment: 'm' '[' . E ']' '=' E

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    E   go to state 29
    M   go to state 19
    X   go to state 20
    P   go to state 21
    id  go to state 22


state 15

   29 id: 'n' .

    $default  reduce using rule 29 (id)


state 16

   28 id: 'm' . '[' E ']'

    '['  shift, and go to state 30


state 17

   26 P: '(' . E ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    E   go to state 31
    M   go to state 19
    X   go to state 20
    P   go to state 21
    id  go to state 22


state 18

   14 Print: 'p' E .

    $default  reduce using rule 14 (Print)


state 19

   15 E: M . Ep

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33

    $default  reduce using rule 18 (Ep)

    Ep  go to state 34


state 20

   19 M: X . Mp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 22 (Mp)

    Mp  go to state 37


state 21

   23 X: P . Xp

    'e'  shift, and go to state 38

    $default  reduce using rule 25 (Xp)

    Xp  go to state 39


state 22

   27 P: id .

    $default  reduce using rule 27 (P)


state 23

    0 $accept: Start $end .

    $default  accept


state 24

    2 Statements: Statement Sp .

    $default  reduce using rule 2 (Statements)


state 25

    3 Sp: Statement . Sp

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 4 (Sp)

    Sp          go to state 40
    Statement   go to state 25
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 26

    9 Label: 'l' 'n' ':' .

    $default  reduce using rule 9 (Label)


state 27

   11 Jp: 'i' . E

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    E   go to state 41
    M   go to state 19
    X   go to state 20
    P   go to state 21
    id  go to state 22


state 28

   10 Jump: 'g' 'n' Jp .

    $default  reduce using rule 10 (Jump)


state 29

   13 Assignment: 'm' '[' E . ']' '=' E

    ']'  shift, and go to state 42


state 30

   28 id: 'm' '[' . E ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    E   go to state 43
    M   go to state 19
    X   go to state 20
    P   go to state 21
    id  go to state 22


state 31

   26 P: '(' E . ')'

    ')'  shift, and go to state 44


state 32

   16 Ep: '+' . M Ep

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    M   go to state 45
    X   go to state 20
    P   go to state 21
    id  go to state 22


state 33

   17 Ep: '-' . M Ep

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    M   go to state 46
    X   go to state 20
    P   go to state 21
    id  go to state 22


state 34

   15 E: M Ep .

    $default  reduce using rule 15 (E)


state 35

   20 Mp: '*' . X Mp

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    X   go to state 47
    P   go to state 21
    id  go to state 22


state 36

   21 Mp: '/' . X Mp

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    X   go to state 48
    P   go to state 21
    id  go to state 22


state 37

   19 M: X Mp .

    $default  reduce using rule 19 (M)


state 38

   24 Xp: 'e' . P Xp

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    P   go to state 49
    id  go to state 22


state 39

   23 X: P Xp .

    $default  reduce using rule 23 (X)


state 40

    3 Sp: Statement Sp .

    $default  reduce using rule 3 (Sp)


state 41

   11 Jp: 'i' E .

    $default  reduce using rule 11 (Jp)


state 42

   13 Assignment: 'm' '[' E ']' . '=' E

    '='  shift, and go to state 50


state 43

   28 id: 'm' '[' E . ']'

    ']'  shift, and go to state 51


state 44

   26 P: '(' E ')' .

    $default  reduce using rule 26 (P)


state 45

   16 Ep: '+' M . Ep

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33

    $default  reduce using rule 18 (Ep)

    Ep  go to state 52


state 46

   17 Ep: '-' M . Ep

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33

    $default  reduce using rule 18 (Ep)

    Ep  go to state 53


state 47

   20 Mp: '*' X . Mp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 22 (Mp)

    Mp  go to state 54


state 48

   21 Mp: '/' X . Mp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 22 (Mp)

    Mp  go to state 55


state 49

   24 Xp: 'e' P . Xp

    'e'  shift, and go to state 38

    $default  reduce using rule 25 (Xp)

    Xp  go to state 56


state 50

   13 Assignment: 'm' '[' E ']' '=' . E

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    E   go to state 57
    M   go to state 19
    X   go to state 20
    P   go to state 21
    id  go to state 22


state 51

   28 id: 'm' '[' E ']' .

    $default  reduce using rule 28 (id)


state 52

   16 Ep: '+' M Ep .

    $default  reduce using rule 16 (Ep)


state 53

   17 Ep: '-' M Ep .

    $default  reduce using rule 17 (Ep)


state 54

   20 Mp: '*' X Mp .

    $default  reduce using rule 20 (Mp)


state 55

   21 Mp: '/' X Mp .

    $default  reduce using rule 21 (Mp)


state 56

   24 Xp: 'e' P Xp .

    $default  reduce using rule 24 (Xp)


state 57

   13 Assignment: 'm' '[' E ']' '=' E .

    $default  reduce using rule 13 (Assignment)
