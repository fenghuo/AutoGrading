Grammar

    0 $accept: Start $end

    1 Start: Stats

    2 Stats: Stat Stats
    3      | Stat

    4 Stat: Label
    5     | Jump
    6     | Assign
    7     | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' 'n'
   10     | 'g' 'n' 'i' Exp1

   11 Assign: 'm' '[' Exp1 ']' '=' Exp1

   12 Print: 'p' Exp1

   13 Exp1: Term1 Exp2

   14 Exp2: '+' Term1 Exp2
   15     | '-' Term1 Exp2
   16     | /* empty */

   17 Term1: Factor Term2

   18 Term2: '*' Factor Term2
   19      | '/' Factor Term2
   20      | /* empty */

   21 Factor: Expo 'e' Factor
   22       | Expo

   23 Expo: '(' Exp1 ')'
   24     | 'm' '[' Exp1 ']'
   25     | 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23
')' (41) 23
'*' (42) 18
'+' (43) 14
'-' (45) 15
'/' (47) 19
':' (58) 8
'=' (61) 11
'[' (91) 11 24
']' (93) 11 24
'e' (101) 21
'g' (103) 9 10
'i' (105) 10
'l' (108) 8
'm' (109) 11 24
'n' (110) 8 9 10 25
'p' (112) 12
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Stats (22)
    on left: 2 3, on right: 1 2
Stat (23)
    on left: 4 5 6 7, on right: 2 3
Label (24)
    on left: 8, on right: 4
Jump (25)
    on left: 9 10, on right: 5
Assign (26)
    on left: 11, on right: 6
Print (27)
    on left: 12, on right: 7
Exp1 (28)
    on left: 13, on right: 10 11 12 23 24
Exp2 (29)
    on left: 14 15 16, on right: 13 14 15
Term1 (30)
    on left: 17, on right: 13 14 15
Term2 (31)
    on left: 18 19 20, on right: 17 18 19
Factor (32)
    on left: 21 22, on right: 17 18 19 21
Expo (33)
    on left: 23 24 25, on right: 21 22


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start   go to state 5
    Stats   go to state 6
    Stat    go to state 7
    Label   go to state 8
    Jump    go to state 9
    Assign  go to state 10
    Print   go to state 11


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

    9 Jump: 'g' . 'n'
   10     | 'g' . 'n' 'i' Exp1

    'n'  shift, and go to state 13


state 3

   11 Assign: 'm' . '[' Exp1 ']' '=' Exp1

    '['  shift, and go to state 14


state 4

   12 Print: 'p' . Exp1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Exp1    go to state 18
    Term1   go to state 19
    Factor  go to state 20
    Expo    go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Stats .

    $default  reduce using rule 1 (Start)


state 7

    2 Stats: Stat . Stats
    3      | Stat .

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 3 (Stats)

    Stats   go to state 23
    Stat    go to state 7
    Label   go to state 8
    Jump    go to state 9
    Assign  go to state 10
    Print   go to state 11


state 8

    4 Stat: Label .

    $default  reduce using rule 4 (Stat)


state 9

    5 Stat: Jump .

    $default  reduce using rule 5 (Stat)


state 10

    6 Stat: Assign .

    $default  reduce using rule 6 (Stat)


state 11

    7 Stat: Print .

    $default  reduce using rule 7 (Stat)


state 12

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 24


state 13

    9 Jump: 'g' 'n' .
   10     | 'g' 'n' . 'i' Exp1

    'i'  shift, and go to state 25

    $default  reduce using rule 9 (Jump)


state 14

   11 Assign: 'm' '[' . Exp1 ']' '=' Exp1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Exp1    go to state 26
    Term1   go to state 19
    Factor  go to state 20
    Expo    go to state 21


state 15

   25 Expo: 'n' .

    $default  reduce using rule 25 (Expo)


state 16

   24 Expo: 'm' . '[' Exp1 ']'

    '['  shift, and go to state 27


state 17

   23 Expo: '(' . Exp1 ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Exp1    go to state 28
    Term1   go to state 19
    Factor  go to state 20
    Expo    go to state 21


state 18

   12 Print: 'p' Exp1 .

    $default  reduce using rule 12 (Print)


state 19

   13 Exp1: Term1 . Exp2

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 16 (Exp2)

    Exp2  go to state 31


state 20

   17 Term1: Factor . Term2

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 20 (Term2)

    Term2  go to state 34


state 21

   21 Factor: Expo . 'e' Factor
   22       | Expo .

    'e'  shift, and go to state 35

    $default  reduce using rule 22 (Factor)


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    2 Stats: Stat Stats .

    $default  reduce using rule 2 (Stats)


state 24

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 25

   10 Jump: 'g' 'n' 'i' . Exp1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Exp1    go to state 36
    Term1   go to state 19
    Factor  go to state 20
    Expo    go to state 21


state 26

   11 Assign: 'm' '[' Exp1 . ']' '=' Exp1

    ']'  shift, and go to state 37


state 27

   24 Expo: 'm' '[' . Exp1 ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Exp1    go to state 38
    Term1   go to state 19
    Factor  go to state 20
    Expo    go to state 21


state 28

   23 Expo: '(' Exp1 . ')'

    ')'  shift, and go to state 39


state 29

   14 Exp2: '+' . Term1 Exp2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term1   go to state 40
    Factor  go to state 20
    Expo    go to state 21


state 30

   15 Exp2: '-' . Term1 Exp2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term1   go to state 41
    Factor  go to state 20
    Expo    go to state 21


state 31

   13 Exp1: Term1 Exp2 .

    $default  reduce using rule 13 (Exp1)


state 32

   18 Term2: '*' . Factor Term2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Factor  go to state 42
    Expo    go to state 21


state 33

   19 Term2: '/' . Factor Term2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Factor  go to state 43
    Expo    go to state 21


state 34

   17 Term1: Factor Term2 .

    $default  reduce using rule 17 (Term1)


state 35

   21 Factor: Expo 'e' . Factor

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Factor  go to state 44
    Expo    go to state 21


state 36

   10 Jump: 'g' 'n' 'i' Exp1 .

    $default  reduce using rule 10 (Jump)


state 37

   11 Assign: 'm' '[' Exp1 ']' . '=' Exp1

    '='  shift, and go to state 45


state 38

   24 Expo: 'm' '[' Exp1 . ']'

    ']'  shift, and go to state 46


state 39

   23 Expo: '(' Exp1 ')' .

    $default  reduce using rule 23 (Expo)


state 40

   14 Exp2: '+' Term1 . Exp2

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 16 (Exp2)

    Exp2  go to state 47


state 41

   15 Exp2: '-' Term1 . Exp2

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 16 (Exp2)

    Exp2  go to state 48


state 42

   18 Term2: '*' Factor . Term2

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 20 (Term2)

    Term2  go to state 49


state 43

   19 Term2: '/' Factor . Term2

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 20 (Term2)

    Term2  go to state 50


state 44

   21 Factor: Expo 'e' Factor .

    $default  reduce using rule 21 (Factor)


state 45

   11 Assign: 'm' '[' Exp1 ']' '=' . Exp1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Exp1    go to state 51
    Term1   go to state 19
    Factor  go to state 20
    Expo    go to state 21


state 46

   24 Expo: 'm' '[' Exp1 ']' .

    $default  reduce using rule 24 (Expo)


state 47

   14 Exp2: '+' Term1 Exp2 .

    $default  reduce using rule 14 (Exp2)


state 48

   15 Exp2: '-' Term1 Exp2 .

    $default  reduce using rule 15 (Exp2)


state 49

   18 Term2: '*' Factor Term2 .

    $default  reduce using rule 18 (Term2)


state 50

   19 Term2: '/' Factor Term2 .

    $default  reduce using rule 19 (Term2)


state 51

   11 Assign: 'm' '[' Exp1 ']' '=' Exp1 .

    $default  reduce using rule 11 (Assign)
