Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statements Statement
    3           | Statement

    4 Statement: Label
    5          | Jump
    6          | Assignment
    7          | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' 'n'
   10     | 'g' 'n' 'i' Expression

   11 Assignment: 'm' '[' Expression ']' '=' Expression

   12 Print: 'p' Expression

   13 Expression: T E1

   14 E1: "+" T E1
   15   | "-" T E1
   16   | /* empty */

   17 T: F T1

   18 T1: "*" F T1
   19   | "/" F T1
   20   | /* empty */

   21 F: final F1

   22 F1: "e" final F1
   23   | /* empty */

   24 final: "(" Expression ")"
   25      | "m" "[" Expression "]"
   26      | "n"


Terminals, with rules where they appear

$end (0) 0
':' (58) 8
'=' (61) 11
'[' (91) 11
']' (93) 11
'g' (103) 9 10
'i' (105) 10
'l' (108) 8
'm' (109) 11
'n' (110) 8 9 10
'p' (112) 12
error (256)
"+" (258) 14
"-" (259) 15
"*" (260) 18
"/" (261) 19
"e" (262) 22
"(" (263) 24
")" (264) 24
"m" (265) 25
"[" (266) 25
"]" (267) 25
"n" (268) 26


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
Start (25)
    on left: 1, on right: 0
Statements (26)
    on left: 2 3, on right: 1 2
Statement (27)
    on left: 4 5 6 7, on right: 2 3
Label (28)
    on left: 8, on right: 4
Jump (29)
    on left: 9 10, on right: 5
Assignment (30)
    on left: 11, on right: 6
Print (31)
    on left: 12, on right: 7
Expression (32)
    on left: 13, on right: 10 11 12 24 25
E1 (33)
    on left: 14 15 16, on right: 13 14 15
T (34)
    on left: 17, on right: 13 14 15
T1 (35)
    on left: 18 19 20, on right: 17 18 19
F (36)
    on left: 21, on right: 17 18 19
F1 (37)
    on left: 22 23, on right: 21 22
final (38)
    on left: 24 25 26, on right: 21 22


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

    9 Jump: 'g' . 'n'
   10     | 'g' . 'n' 'i' Expression

    'n'  shift, and go to state 13


state 3

   11 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   12 Print: 'p' . Expression

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    Expression  go to state 18
    T           go to state 19
    F           go to state 20
    final       go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statements .
    2 Statements: Statements . Statement

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 1 (Start)

    Statement   go to state 23
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 7

    3 Statements: Statement .

    $default  reduce using rule 3 (Statements)


state 8

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 9

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 10

    6 Statement: Assignment .

    $default  reduce using rule 6 (Statement)


state 11

    7 Statement: Print .

    $default  reduce using rule 7 (Statement)


state 12

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 24


state 13

    9 Jump: 'g' 'n' .
   10     | 'g' 'n' . 'i' Expression

    'i'  shift, and go to state 25

    $default  reduce using rule 9 (Jump)


state 14

   11 Assignment: 'm' '[' . Expression ']' '=' Expression

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    Expression  go to state 26
    T           go to state 19
    F           go to state 20
    final       go to state 21


state 15

   24 final: "(" . Expression ")"

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    Expression  go to state 27
    T           go to state 19
    F           go to state 20
    final       go to state 21


state 16

   25 final: "m" . "[" Expression "]"

    "["  shift, and go to state 28


state 17

   26 final: "n" .

    $default  reduce using rule 26 (final)


state 18

   12 Print: 'p' Expression .

    $default  reduce using rule 12 (Print)


state 19

   13 Expression: T . E1

    "+"  shift, and go to state 29
    "-"  shift, and go to state 30

    $default  reduce using rule 16 (E1)

    E1  go to state 31


state 20

   17 T: F . T1

    "*"  shift, and go to state 32
    "/"  shift, and go to state 33

    $default  reduce using rule 20 (T1)

    T1  go to state 34


state 21

   21 F: final . F1

    "e"  shift, and go to state 35

    $default  reduce using rule 23 (F1)

    F1  go to state 36


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    2 Statements: Statements Statement .

    $default  reduce using rule 2 (Statements)


state 24

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 25

   10 Jump: 'g' 'n' 'i' . Expression

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    Expression  go to state 37
    T           go to state 19
    F           go to state 20
    final       go to state 21


state 26

   11 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 38


state 27

   24 final: "(" Expression . ")"

    ")"  shift, and go to state 39


state 28

   25 final: "m" "[" . Expression "]"

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    Expression  go to state 40
    T           go to state 19
    F           go to state 20
    final       go to state 21


state 29

   14 E1: "+" . T E1

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    T      go to state 41
    F      go to state 20
    final  go to state 21


state 30

   15 E1: "-" . T E1

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    T      go to state 42
    F      go to state 20
    final  go to state 21


state 31

   13 Expression: T E1 .

    $default  reduce using rule 13 (Expression)


state 32

   18 T1: "*" . F T1

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    F      go to state 43
    final  go to state 21


state 33

   19 T1: "/" . F T1

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    F      go to state 44
    final  go to state 21


state 34

   17 T: F T1 .

    $default  reduce using rule 17 (T)


state 35

   22 F1: "e" . final F1

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    final  go to state 45


state 36

   21 F: final F1 .

    $default  reduce using rule 21 (F)


state 37

   10 Jump: 'g' 'n' 'i' Expression .

    $default  reduce using rule 10 (Jump)


state 38

   11 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 46


state 39

   24 final: "(" Expression ")" .

    $default  reduce using rule 24 (final)


state 40

   25 final: "m" "[" Expression . "]"

    "]"  shift, and go to state 47


state 41

   14 E1: "+" T . E1

    "+"  shift, and go to state 29
    "-"  shift, and go to state 30

    $default  reduce using rule 16 (E1)

    E1  go to state 48


state 42

   15 E1: "-" T . E1

    "+"  shift, and go to state 29
    "-"  shift, and go to state 30

    $default  reduce using rule 16 (E1)

    E1  go to state 49


state 43

   18 T1: "*" F . T1

    "*"  shift, and go to state 32
    "/"  shift, and go to state 33

    $default  reduce using rule 20 (T1)

    T1  go to state 50


state 44

   19 T1: "/" F . T1

    "*"  shift, and go to state 32
    "/"  shift, and go to state 33

    $default  reduce using rule 20 (T1)

    T1  go to state 51


state 45

   22 F1: "e" final . F1

    "e"  shift, and go to state 35

    $default  reduce using rule 23 (F1)

    F1  go to state 52


state 46

   11 Assignment: 'm' '[' Expression ']' '=' . Expression

    "("  shift, and go to state 15
    "m"  shift, and go to state 16
    "n"  shift, and go to state 17

    Expression  go to state 53
    T           go to state 19
    F           go to state 20
    final       go to state 21


state 47

   25 final: "m" "[" Expression "]" .

    $default  reduce using rule 25 (final)


state 48

   14 E1: "+" T E1 .

    $default  reduce using rule 14 (E1)


state 49

   15 E1: "-" T E1 .

    $default  reduce using rule 15 (E1)


state 50

   18 T1: "*" F T1 .

    $default  reduce using rule 18 (T1)


state 51

   19 T1: "/" F T1 .

    $default  reduce using rule 19 (T1)


state 52

   22 F1: "e" final F1 .

    $default  reduce using rule 22 (F1)


state 53

   11 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 11 (Assignment)
