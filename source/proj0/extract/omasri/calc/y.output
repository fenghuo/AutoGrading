Grammar

    0 $accept: Start $end

    1 Start: Statement Statements

    2 Statements: Statements Statement
    3           | /* empty */

    4 Statement: Label
    5          | Jump
    6          | Assignment
    7          | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' Goto

   10 Goto: 'n' Num

   11 Num: 'i' Expression
   12    | /* empty */

   13 Assignment: 'm' '[' Expression ']' '=' Expression

   14 Print: 'p' Expression

   15 Expression: Term ExpressionP

   16 ExpressionP: '+' Term ExpressionP
   17            | '-' Term ExpressionP
   18            | /* empty */

   19 Term: Factor TermP

   20 TermP: '*' Pow TermP
   21      | '/' Pow TermP
   22      | /* empty */

   23 Factor: Pow PowP

   24 PowP: 'e' Factor
   25     | /* empty */

   26 Pow: '(' Expression ')'
   27    | 'm' '[' Expression ']'
   28    | 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 26
')' (41) 26
'*' (42) 20
'+' (43) 16
'-' (45) 17
'/' (47) 21
':' (58) 8
'=' (61) 13
'[' (91) 13 27
']' (93) 13 27
'e' (101) 24
'g' (103) 9
'i' (105) 11
'l' (108) 8
'm' (109) 13 27
'n' (110) 8 10 28
'p' (112) 14
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 2
Statement (23)
    on left: 4 5 6 7, on right: 1 2
Label (24)
    on left: 8, on right: 4
Jump (25)
    on left: 9, on right: 5
Goto (26)
    on left: 10, on right: 9
Num (27)
    on left: 11 12, on right: 10
Assignment (28)
    on left: 13, on right: 6
Print (29)
    on left: 14, on right: 7
Expression (30)
    on left: 15, on right: 11 13 14 26 27
ExpressionP (31)
    on left: 16 17 18, on right: 15 16 17
Term (32)
    on left: 19, on right: 15 16 17
TermP (33)
    on left: 20 21 22, on right: 19 20 21
Factor (34)
    on left: 23, on right: 19 24
PowP (35)
    on left: 24 25, on right: 23
Pow (36)
    on left: 26 27 28, on right: 20 21 23


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statement   go to state 6
    Label       go to state 7
    Jump        go to state 8
    Assignment  go to state 9
    Print       go to state 10


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 11


state 2

    9 Jump: 'g' . Goto

    'n'  shift, and go to state 12

    Goto  go to state 13


state 3

   13 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   14 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 18
    Term        go to state 19
    Factor      go to state 20
    Pow         go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statement . Statements

    $default  reduce using rule 3 (Statements)

    Statements  go to state 23


state 7

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 8

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 9

    6 Statement: Assignment .

    $default  reduce using rule 6 (Statement)


state 10

    7 Statement: Print .

    $default  reduce using rule 7 (Statement)


state 11

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 24


state 12

   10 Goto: 'n' . Num

    'i'  shift, and go to state 25

    $default  reduce using rule 12 (Num)

    Num  go to state 26


state 13

    9 Jump: 'g' Goto .

    $default  reduce using rule 9 (Jump)


state 14

   13 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 27
    Term        go to state 19
    Factor      go to state 20
    Pow         go to state 21


state 15

   28 Pow: 'n' .

    $default  reduce using rule 28 (Pow)


state 16

   27 Pow: 'm' . '[' Expression ']'

    '['  shift, and go to state 28


state 17

   26 Pow: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 29
    Term        go to state 19
    Factor      go to state 20
    Pow         go to state 21


state 18

   14 Print: 'p' Expression .

    $default  reduce using rule 14 (Print)


state 19

   15 Expression: Term . ExpressionP

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 18 (ExpressionP)

    ExpressionP  go to state 32


state 20

   19 Term: Factor . TermP

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 22 (TermP)

    TermP  go to state 35


state 21

   23 Factor: Pow . PowP

    'e'  shift, and go to state 36

    $default  reduce using rule 25 (PowP)

    PowP  go to state 37


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    1 Start: Statement Statements .
    2 Statements: Statements . Statement

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 1 (Start)

    Statement   go to state 38
    Label       go to state 7
    Jump        go to state 8
    Assignment  go to state 9
    Print       go to state 10


state 24

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 25

   11 Num: 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 39
    Term        go to state 19
    Factor      go to state 20
    Pow         go to state 21


state 26

   10 Goto: 'n' Num .

    $default  reduce using rule 10 (Goto)


state 27

   13 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 40


state 28

   27 Pow: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 41
    Term        go to state 19
    Factor      go to state 20
    Pow         go to state 21


state 29

   26 Pow: '(' Expression . ')'

    ')'  shift, and go to state 42


state 30

   16 ExpressionP: '+' . Term ExpressionP

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term    go to state 43
    Factor  go to state 20
    Pow     go to state 21


state 31

   17 ExpressionP: '-' . Term ExpressionP

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term    go to state 44
    Factor  go to state 20
    Pow     go to state 21


state 32

   15 Expression: Term ExpressionP .

    $default  reduce using rule 15 (Expression)


state 33

   20 TermP: '*' . Pow TermP

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Pow  go to state 45


state 34

   21 TermP: '/' . Pow TermP

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Pow  go to state 46


state 35

   19 Term: Factor TermP .

    $default  reduce using rule 19 (Term)


state 36

   24 PowP: 'e' . Factor

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Factor  go to state 47
    Pow     go to state 21


state 37

   23 Factor: Pow PowP .

    $default  reduce using rule 23 (Factor)


state 38

    2 Statements: Statements Statement .

    $default  reduce using rule 2 (Statements)


state 39

   11 Num: 'i' Expression .

    $default  reduce using rule 11 (Num)


state 40

   13 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 48


state 41

   27 Pow: 'm' '[' Expression . ']'

    ']'  shift, and go to state 49


state 42

   26 Pow: '(' Expression ')' .

    $default  reduce using rule 26 (Pow)


state 43

   16 ExpressionP: '+' Term . ExpressionP

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 18 (ExpressionP)

    ExpressionP  go to state 50


state 44

   17 ExpressionP: '-' Term . ExpressionP

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 18 (ExpressionP)

    ExpressionP  go to state 51


state 45

   20 TermP: '*' Pow . TermP

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 22 (TermP)

    TermP  go to state 52


state 46

   21 TermP: '/' Pow . TermP

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 22 (TermP)

    TermP  go to state 53


state 47

   24 PowP: 'e' Factor .

    $default  reduce using rule 24 (PowP)


state 48

   13 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 54
    Term        go to state 19
    Factor      go to state 20
    Pow         go to state 21


state 49

   27 Pow: 'm' '[' Expression ']' .

    $default  reduce using rule 27 (Pow)


state 50

   16 ExpressionP: '+' Term ExpressionP .

    $default  reduce using rule 16 (ExpressionP)


state 51

   17 ExpressionP: '-' Term ExpressionP .

    $default  reduce using rule 17 (ExpressionP)


state 52

   20 TermP: '*' Pow TermP .

    $default  reduce using rule 20 (TermP)


state 53

   21 TermP: '/' Pow TermP .

    $default  reduce using rule 21 (TermP)


state 54

   13 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 13 (Assignment)
