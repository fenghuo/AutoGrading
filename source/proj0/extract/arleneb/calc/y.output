Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statement Statements1

    3 Statements1: Statement Statements1
    4            | /* empty */

    5 Statement: Label
    6          | Jump
    7          | Assignment
    8          | Print

    9 Label: 'l' 'n' ':'

   10 Jump: 'g' 'n' Jump1

   11 Jump1: 'i' Expression
   12      | /* empty */

   13 Assignment: 'm' '[' Expression ']' '=' Expression

   14 Print: 'p' Expression

   15 Expression: Multdiv Expression1

   16 Expression1: '+' Multdiv Expression1
   17            | '-' Multdiv Expression1
   18            | /* empty */

   19 Multdiv: Exp Multdiv1

   20 Multdiv1: '*' Exp Multdiv1
   21         | '/' Exp Multdiv1
   22         | /* empty */

   23 Exp: Par Exp1

   24 Exp1: 'e' Par
   25     | /* empty */

   26 Par: '(' Expression ')'
   27    | 'm' '[' Expression ']'
   28    | 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 26
')' (41) 26
'*' (42) 20
'+' (43) 16
'-' (45) 17
'/' (47) 21
':' (58) 9
'=' (61) 13
'[' (91) 13 27
']' (93) 13 27
'e' (101) 24
'g' (103) 10
'i' (105) 11
'l' (108) 9
'm' (109) 13 27
'n' (110) 9 10 28
'p' (112) 14
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2, on right: 1
Statements1 (23)
    on left: 3 4, on right: 2 3
Statement (24)
    on left: 5 6 7 8, on right: 2 3
Label (25)
    on left: 9, on right: 5
Jump (26)
    on left: 10, on right: 6
Jump1 (27)
    on left: 11 12, on right: 10
Assignment (28)
    on left: 13, on right: 7
Print (29)
    on left: 14, on right: 8
Expression (30)
    on left: 15, on right: 11 13 14 26 27
Expression1 (31)
    on left: 16 17 18, on right: 15 16 17
Multdiv (32)
    on left: 19, on right: 15 16 17
Multdiv1 (33)
    on left: 20 21 22, on right: 19 20 21
Exp (34)
    on left: 23, on right: 19 20 21
Exp1 (35)
    on left: 24 25, on right: 23
Par (36)
    on left: 26 27 28, on right: 23 24


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    9 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

   10 Jump: 'g' . 'n' Jump1

    'n'  shift, and go to state 13


state 3

   13 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   14 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 18
    Multdiv     go to state 19
    Exp         go to state 20
    Par         go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statements .

    $default  reduce using rule 1 (Start)


state 7

    2 Statements: Statement . Statements1

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 4 (Statements1)

    Statements1  go to state 23
    Statement    go to state 24
    Label        go to state 8
    Jump         go to state 9
    Assignment   go to state 10
    Print        go to state 11


state 8

    5 Statement: Label .

    $default  reduce using rule 5 (Statement)


state 9

    6 Statement: Jump .

    $default  reduce using rule 6 (Statement)


state 10

    7 Statement: Assignment .

    $default  reduce using rule 7 (Statement)


state 11

    8 Statement: Print .

    $default  reduce using rule 8 (Statement)


state 12

    9 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 25


state 13

   10 Jump: 'g' 'n' . Jump1

    'i'  shift, and go to state 26

    $default  reduce using rule 12 (Jump1)

    Jump1  go to state 27


state 14

   13 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 28
    Multdiv     go to state 19
    Exp         go to state 20
    Par         go to state 21


state 15

   28 Par: 'n' .

    $default  reduce using rule 28 (Par)


state 16

   27 Par: 'm' . '[' Expression ']'

    '['  shift, and go to state 29


state 17

   26 Par: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 30
    Multdiv     go to state 19
    Exp         go to state 20
    Par         go to state 21


state 18

   14 Print: 'p' Expression .

    $default  reduce using rule 14 (Print)


state 19

   15 Expression: Multdiv . Expression1

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32

    $default  reduce using rule 18 (Expression1)

    Expression1  go to state 33


state 20

   19 Multdiv: Exp . Multdiv1

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 22 (Multdiv1)

    Multdiv1  go to state 36


state 21

   23 Exp: Par . Exp1

    'e'  shift, and go to state 37

    $default  reduce using rule 25 (Exp1)

    Exp1  go to state 38


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    2 Statements: Statement Statements1 .

    $default  reduce using rule 2 (Statements)


state 24

    3 Statements1: Statement . Statements1

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 4 (Statements1)

    Statements1  go to state 39
    Statement    go to state 24
    Label        go to state 8
    Jump         go to state 9
    Assignment   go to state 10
    Print        go to state 11


state 25

    9 Label: 'l' 'n' ':' .

    $default  reduce using rule 9 (Label)


state 26

   11 Jump1: 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 40
    Multdiv     go to state 19
    Exp         go to state 20
    Par         go to state 21


state 27

   10 Jump: 'g' 'n' Jump1 .

    $default  reduce using rule 10 (Jump)


state 28

   13 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 41


state 29

   27 Par: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 42
    Multdiv     go to state 19
    Exp         go to state 20
    Par         go to state 21


state 30

   26 Par: '(' Expression . ')'

    ')'  shift, and go to state 43


state 31

   16 Expression1: '+' . Multdiv Expression1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Multdiv  go to state 44
    Exp      go to state 20
    Par      go to state 21


state 32

   17 Expression1: '-' . Multdiv Expression1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Multdiv  go to state 45
    Exp      go to state 20
    Par      go to state 21


state 33

   15 Expression: Multdiv Expression1 .

    $default  reduce using rule 15 (Expression)


state 34

   20 Multdiv1: '*' . Exp Multdiv1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Exp  go to state 46
    Par  go to state 21


state 35

   21 Multdiv1: '/' . Exp Multdiv1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Exp  go to state 47
    Par  go to state 21


state 36

   19 Multdiv: Exp Multdiv1 .

    $default  reduce using rule 19 (Multdiv)


state 37

   24 Exp1: 'e' . Par

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Par  go to state 48


state 38

   23 Exp: Par Exp1 .

    $default  reduce using rule 23 (Exp)


state 39

    3 Statements1: Statement Statements1 .

    $default  reduce using rule 3 (Statements1)


state 40

   11 Jump1: 'i' Expression .

    $default  reduce using rule 11 (Jump1)


state 41

   13 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 49


state 42

   27 Par: 'm' '[' Expression . ']'

    ']'  shift, and go to state 50


state 43

   26 Par: '(' Expression ')' .

    $default  reduce using rule 26 (Par)


state 44

   16 Expression1: '+' Multdiv . Expression1

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32

    $default  reduce using rule 18 (Expression1)

    Expression1  go to state 51


state 45

   17 Expression1: '-' Multdiv . Expression1

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32

    $default  reduce using rule 18 (Expression1)

    Expression1  go to state 52


state 46

   20 Multdiv1: '*' Exp . Multdiv1

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 22 (Multdiv1)

    Multdiv1  go to state 53


state 47

   21 Multdiv1: '/' Exp . Multdiv1

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 22 (Multdiv1)

    Multdiv1  go to state 54


state 48

   24 Exp1: 'e' Par .

    $default  reduce using rule 24 (Exp1)


state 49

   13 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 55
    Multdiv     go to state 19
    Exp         go to state 20
    Par         go to state 21


state 50

   27 Par: 'm' '[' Expression ']' .

    $default  reduce using rule 27 (Par)


state 51

   16 Expression1: '+' Multdiv Expression1 .

    $default  reduce using rule 16 (Expression1)


state 52

   17 Expression1: '-' Multdiv Expression1 .

    $default  reduce using rule 17 (Expression1)


state 53

   20 Multdiv1: '*' Exp Multdiv1 .

    $default  reduce using rule 20 (Multdiv1)


state 54

   21 Multdiv1: '/' Exp Multdiv1 .

    $default  reduce using rule 21 (Multdiv1)


state 55

   13 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 13 (Assignment)
