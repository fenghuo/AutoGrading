Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statement Statements
    3           | /* empty */

    4 Statement: Label
    5          | Jump
    6          | Assignment
    7          | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' 'n'
   10     | 'g' 'n' 'i' Expression

   11 Assignment: MemAccess '=' Expression

   12 Print: 'p' Expression

   13 Expression: Term EAddSub

   14 EAddSub: '+' Term
   15        | '-' Term EAddSub
   16        | /* empty */

   17 Term: Factor TMultDiv
   18     | MemAccess

   19 TMultDiv: '*' Factor TMultDiv
   20         | '/' Factor TMultDiv
   21         | /* empty */

   22 MemAccess: 'm' '[' Expression ']'

   23 Factor: NumParen Exponen

   24 NumParen: '(' Expression ')'
   25         | 'n'

   26 Exponen: 'e' NumParen Exponen
   27        | /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24
')' (41) 24
'*' (42) 19
'+' (43) 14
'-' (45) 15
'/' (47) 20
':' (58) 8
'=' (61) 11
'[' (91) 22
']' (93) 22
'e' (101) 26
'g' (103) 9 10
'i' (105) 10
'l' (108) 8
'm' (109) 22
'n' (110) 8 9 10 25
'p' (112) 12
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 2
Statement (23)
    on left: 4 5 6 7, on right: 2
Label (24)
    on left: 8, on right: 4
Jump (25)
    on left: 9 10, on right: 5
Assignment (26)
    on left: 11, on right: 6
Print (27)
    on left: 12, on right: 7
Expression (28)
    on left: 13, on right: 10 11 12 22 24
EAddSub (29)
    on left: 14 15 16, on right: 13 15
Term (30)
    on left: 17 18, on right: 13 14 15
TMultDiv (31)
    on left: 19 20 21, on right: 17 19 20
MemAccess (32)
    on left: 22, on right: 11 18
Factor (33)
    on left: 23, on right: 17 19 20
NumParen (34)
    on left: 24 25, on right: 23 26
Exponen (35)
    on left: 26 27, on right: 23 26


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'p'  shift, and go to state 3
    'm'  shift, and go to state 4

    $default  reduce using rule 3 (Statements)

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11
    MemAccess   go to state 12


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 13


state 2

    9 Jump: 'g' . 'n'
   10     | 'g' . 'n' 'i' Expression

    'n'  shift, and go to state 14


state 3

   12 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 4
    '('  shift, and go to state 16

    Expression  go to state 17
    Term        go to state 18
    MemAccess   go to state 19
    Factor      go to state 20
    NumParen    go to state 21


state 4

   22 MemAccess: 'm' . '[' Expression ']'

    '['  shift, and go to state 22


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 23


state 6

    1 Start: Statements .

    $default  reduce using rule 1 (Start)


state 7

    2 Statements: Statement . Statements

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'p'  shift, and go to state 3
    'm'  shift, and go to state 4

    $default  reduce using rule 3 (Statements)

    Statements  go to state 24
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11
    MemAccess   go to state 12


state 8

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 9

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 10

    6 Statement: Assignment .

    $default  reduce using rule 6 (Statement)


state 11

    7 Statement: Print .

    $default  reduce using rule 7 (Statement)


state 12

   11 Assignment: MemAccess . '=' Expression

    '='  shift, and go to state 25


state 13

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 26


state 14

    9 Jump: 'g' 'n' .
   10     | 'g' 'n' . 'i' Expression

    'i'  shift, and go to state 27

    $default  reduce using rule 9 (Jump)


state 15

   25 NumParen: 'n' .

    $default  reduce using rule 25 (NumParen)


state 16

   24 NumParen: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 4
    '('  shift, and go to state 16

    Expression  go to state 28
    Term        go to state 18
    MemAccess   go to state 19
    Factor      go to state 20
    NumParen    go to state 21


state 17

   12 Print: 'p' Expression .

    $default  reduce using rule 12 (Print)


state 18

   13 Expression: Term . EAddSub

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 16 (EAddSub)

    EAddSub  go to state 31


state 19

   18 Term: MemAccess .

    $default  reduce using rule 18 (Term)


state 20

   17 Term: Factor . TMultDiv

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 21 (TMultDiv)

    TMultDiv  go to state 34


state 21

   23 Factor: NumParen . Exponen

    'e'  shift, and go to state 35

    $default  reduce using rule 27 (Exponen)

    Exponen  go to state 36


state 22

   22 MemAccess: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 4
    '('  shift, and go to state 16

    Expression  go to state 37
    Term        go to state 18
    MemAccess   go to state 19
    Factor      go to state 20
    NumParen    go to state 21


state 23

    0 $accept: Start $end .

    $default  accept


state 24

    2 Statements: Statement Statements .

    $default  reduce using rule 2 (Statements)


state 25

   11 Assignment: MemAccess '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 4
    '('  shift, and go to state 16

    Expression  go to state 38
    Term        go to state 18
    MemAccess   go to state 19
    Factor      go to state 20
    NumParen    go to state 21


state 26

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 27

   10 Jump: 'g' 'n' 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 4
    '('  shift, and go to state 16

    Expression  go to state 39
    Term        go to state 18
    MemAccess   go to state 19
    Factor      go to state 20
    NumParen    go to state 21


state 28

   24 NumParen: '(' Expression . ')'

    ')'  shift, and go to state 40


state 29

   14 EAddSub: '+' . Term

    'n'  shift, and go to state 15
    'm'  shift, and go to state 4
    '('  shift, and go to state 16

    Term       go to state 41
    MemAccess  go to state 19
    Factor     go to state 20
    NumParen   go to state 21


state 30

   15 EAddSub: '-' . Term EAddSub

    'n'  shift, and go to state 15
    'm'  shift, and go to state 4
    '('  shift, and go to state 16

    Term       go to state 42
    MemAccess  go to state 19
    Factor     go to state 20
    NumParen   go to state 21


state 31

   13 Expression: Term EAddSub .

    $default  reduce using rule 13 (Expression)


state 32

   19 TMultDiv: '*' . Factor TMultDiv

    'n'  shift, and go to state 15
    '('  shift, and go to state 16

    Factor    go to state 43
    NumParen  go to state 21


state 33

   20 TMultDiv: '/' . Factor TMultDiv

    'n'  shift, and go to state 15
    '('  shift, and go to state 16

    Factor    go to state 44
    NumParen  go to state 21


state 34

   17 Term: Factor TMultDiv .

    $default  reduce using rule 17 (Term)


state 35

   26 Exponen: 'e' . NumParen Exponen

    'n'  shift, and go to state 15
    '('  shift, and go to state 16

    NumParen  go to state 45


state 36

   23 Factor: NumParen Exponen .

    $default  reduce using rule 23 (Factor)


state 37

   22 MemAccess: 'm' '[' Expression . ']'

    ']'  shift, and go to state 46


state 38

   11 Assignment: MemAccess '=' Expression .

    $default  reduce using rule 11 (Assignment)


state 39

   10 Jump: 'g' 'n' 'i' Expression .

    $default  reduce using rule 10 (Jump)


state 40

   24 NumParen: '(' Expression ')' .

    $default  reduce using rule 24 (NumParen)


state 41

   14 EAddSub: '+' Term .

    $default  reduce using rule 14 (EAddSub)


state 42

   15 EAddSub: '-' Term . EAddSub

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 16 (EAddSub)

    EAddSub  go to state 47


state 43

   19 TMultDiv: '*' Factor . TMultDiv

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 21 (TMultDiv)

    TMultDiv  go to state 48


state 44

   20 TMultDiv: '/' Factor . TMultDiv

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 21 (TMultDiv)

    TMultDiv  go to state 49


state 45

   26 Exponen: 'e' NumParen . Exponen

    'e'  shift, and go to state 35

    $default  reduce using rule 27 (Exponen)

    Exponen  go to state 50


state 46

   22 MemAccess: 'm' '[' Expression ']' .

    $default  reduce using rule 22 (MemAccess)


state 47

   15 EAddSub: '-' Term EAddSub .

    $default  reduce using rule 15 (EAddSub)


state 48

   19 TMultDiv: '*' Factor TMultDiv .

    $default  reduce using rule 19 (TMultDiv)


state 49

   20 TMultDiv: '/' Factor TMultDiv .

    $default  reduce using rule 20 (TMultDiv)


state 50

   26 Exponen: 'e' NumParen Exponen .

    $default  reduce using rule 26 (Exponen)
