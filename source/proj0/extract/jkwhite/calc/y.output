Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statement Statements2

    3 Statements2: Statement Statements2
    4            | /* empty */

    5 Statement: Label
    6          | Jump
    7          | Assignment
    8          | Print

    9 Label: 'l' 'n' ':'

   10 Jump: 'g' 'n'
   11     | 'g' 'n' 'i' Expression

   12 Assignment: 'm' '[' Expression ']' '=' Expression

   13 Print: 'p' Expression

   14 Expression: Term Expression2

   15 Expression2: '+' Term Expression2
   16            | '-' Term Expression2
   17            | /* empty */

   18 Term: Factor Term2

   19 Term2: '*' Factor Term2
   20      | '/' Factor Term2
   21      | /* empty */

   22 Factor: Paren Factor2

   23 Factor2: 'e' Paren Factor2
   24        | /* empty */

   25 Paren: '(' Expression ')'
   26      | Mem

   27 Mem: 'm' '[' Expression ']'
   28    | Number

   29 Number: 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 25
')' (41) 25
'*' (42) 19
'+' (43) 15
'-' (45) 16
'/' (47) 20
':' (58) 9
'=' (61) 12
'[' (91) 12 27
']' (93) 12 27
'e' (101) 23
'g' (103) 10 11
'i' (105) 11
'l' (108) 9
'm' (109) 12 27
'n' (110) 9 10 11 29
'p' (112) 13
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2, on right: 1
Statements2 (23)
    on left: 3 4, on right: 2 3
Statement (24)
    on left: 5 6 7 8, on right: 2 3
Label (25)
    on left: 9, on right: 5
Jump (26)
    on left: 10 11, on right: 6
Assignment (27)
    on left: 12, on right: 7
Print (28)
    on left: 13, on right: 8
Expression (29)
    on left: 14, on right: 11 12 13 25 27
Expression2 (30)
    on left: 15 16 17, on right: 14 15 16
Term (31)
    on left: 18, on right: 14 15 16
Term2 (32)
    on left: 19 20 21, on right: 18 19 20
Factor (33)
    on left: 22, on right: 18 19 20
Factor2 (34)
    on left: 23 24, on right: 22 23
Paren (35)
    on left: 25 26, on right: 22 23
Mem (36)
    on left: 27 28, on right: 26
Number (37)
    on left: 29, on right: 28


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    9 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

   10 Jump: 'g' . 'n'
   11     | 'g' . 'n' 'i' Expression

    'n'  shift, and go to state 13


state 3

   12 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   13 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 18
    Term        go to state 19
    Factor      go to state 20
    Paren       go to state 21
    Mem         go to state 22
    Number      go to state 23


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 24


state 6

    1 Start: Statements .

    $default  reduce using rule 1 (Start)


state 7

    2 Statements: Statement . Statements2

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 4 (Statements2)

    Statements2  go to state 25
    Statement    go to state 26
    Label        go to state 8
    Jump         go to state 9
    Assignment   go to state 10
    Print        go to state 11


state 8

    5 Statement: Label .

    $default  reduce using rule 5 (Statement)


state 9

    6 Statement: Jump .

    $default  reduce using rule 6 (Statement)


state 10

    7 Statement: Assignment .

    $default  reduce using rule 7 (Statement)


state 11

    8 Statement: Print .

    $default  reduce using rule 8 (Statement)


state 12

    9 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 27


state 13

   10 Jump: 'g' 'n' .
   11     | 'g' 'n' . 'i' Expression

    'i'  shift, and go to state 28

    $default  reduce using rule 10 (Jump)


state 14

   12 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 29
    Term        go to state 19
    Factor      go to state 20
    Paren       go to state 21
    Mem         go to state 22
    Number      go to state 23


state 15

   29 Number: 'n' .

    $default  reduce using rule 29 (Number)


state 16

   27 Mem: 'm' . '[' Expression ']'

    '['  shift, and go to state 30


state 17

   25 Paren: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 31
    Term        go to state 19
    Factor      go to state 20
    Paren       go to state 21
    Mem         go to state 22
    Number      go to state 23


state 18

   13 Print: 'p' Expression .

    $default  reduce using rule 13 (Print)


state 19

   14 Expression: Term . Expression2

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33

    $default  reduce using rule 17 (Expression2)

    Expression2  go to state 34


state 20

   18 Term: Factor . Term2

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 21 (Term2)

    Term2  go to state 37


state 21

   22 Factor: Paren . Factor2

    'e'  shift, and go to state 38

    $default  reduce using rule 24 (Factor2)

    Factor2  go to state 39


state 22

   26 Paren: Mem .

    $default  reduce using rule 26 (Paren)


state 23

   28 Mem: Number .

    $default  reduce using rule 28 (Mem)


state 24

    0 $accept: Start $end .

    $default  accept


state 25

    2 Statements: Statement Statements2 .

    $default  reduce using rule 2 (Statements)


state 26

    3 Statements2: Statement . Statements2

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 4 (Statements2)

    Statements2  go to state 40
    Statement    go to state 26
    Label        go to state 8
    Jump         go to state 9
    Assignment   go to state 10
    Print        go to state 11


state 27

    9 Label: 'l' 'n' ':' .

    $default  reduce using rule 9 (Label)


state 28

   11 Jump: 'g' 'n' 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 41
    Term        go to state 19
    Factor      go to state 20
    Paren       go to state 21
    Mem         go to state 22
    Number      go to state 23


state 29

   12 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 42


state 30

   27 Mem: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 43
    Term        go to state 19
    Factor      go to state 20
    Paren       go to state 21
    Mem         go to state 22
    Number      go to state 23


state 31

   25 Paren: '(' Expression . ')'

    ')'  shift, and go to state 44


state 32

   15 Expression2: '+' . Term Expression2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term    go to state 45
    Factor  go to state 20
    Paren   go to state 21
    Mem     go to state 22
    Number  go to state 23


state 33

   16 Expression2: '-' . Term Expression2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Term    go to state 46
    Factor  go to state 20
    Paren   go to state 21
    Mem     go to state 22
    Number  go to state 23


state 34

   14 Expression: Term Expression2 .

    $default  reduce using rule 14 (Expression)


state 35

   19 Term2: '*' . Factor Term2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Factor  go to state 47
    Paren   go to state 21
    Mem     go to state 22
    Number  go to state 23


state 36

   20 Term2: '/' . Factor Term2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Factor  go to state 48
    Paren   go to state 21
    Mem     go to state 22
    Number  go to state 23


state 37

   18 Term: Factor Term2 .

    $default  reduce using rule 18 (Term)


state 38

   23 Factor2: 'e' . Paren Factor2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Paren   go to state 49
    Mem     go to state 22
    Number  go to state 23


state 39

   22 Factor: Paren Factor2 .

    $default  reduce using rule 22 (Factor)


state 40

    3 Statements2: Statement Statements2 .

    $default  reduce using rule 3 (Statements2)


state 41

   11 Jump: 'g' 'n' 'i' Expression .

    $default  reduce using rule 11 (Jump)


state 42

   12 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 50


state 43

   27 Mem: 'm' '[' Expression . ']'

    ']'  shift, and go to state 51


state 44

   25 Paren: '(' Expression ')' .

    $default  reduce using rule 25 (Paren)


state 45

   15 Expression2: '+' Term . Expression2

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33

    $default  reduce using rule 17 (Expression2)

    Expression2  go to state 52


state 46

   16 Expression2: '-' Term . Expression2

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33

    $default  reduce using rule 17 (Expression2)

    Expression2  go to state 53


state 47

   19 Term2: '*' Factor . Term2

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 21 (Term2)

    Term2  go to state 54


state 48

   20 Term2: '/' Factor . Term2

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 21 (Term2)

    Term2  go to state 55


state 49

   23 Factor2: 'e' Paren . Factor2

    'e'  shift, and go to state 38

    $default  reduce using rule 24 (Factor2)

    Factor2  go to state 56


state 50

   12 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 57
    Term        go to state 19
    Factor      go to state 20
    Paren       go to state 21
    Mem         go to state 22
    Number      go to state 23


state 51

   27 Mem: 'm' '[' Expression ']' .

    $default  reduce using rule 27 (Mem)


state 52

   15 Expression2: '+' Term Expression2 .

    $default  reduce using rule 15 (Expression2)


state 53

   16 Expression2: '-' Term Expression2 .

    $default  reduce using rule 16 (Expression2)


state 54

   19 Term2: '*' Factor Term2 .

    $default  reduce using rule 19 (Term2)


state 55

   20 Term2: '/' Factor Term2 .

    $default  reduce using rule 20 (Term2)


state 56

   23 Factor2: 'e' Paren Factor2 .

    $default  reduce using rule 23 (Factor2)


state 57

   12 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 12 (Assignment)
