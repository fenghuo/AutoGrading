Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statement Statements
    3           | /* empty */

    4 Statement: Label
    5          | Jump
    6          | Assignment
    7          | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' 'n' Jump1

   10 Jump1: 'i' Expression
   11      | /* empty */

   12 Assignment: 'm' '[' Expression ']' '=' Expression

   13 Print: 'p' Expression

   14 Expression: T Expression2

   15 Expression2: '+' T Expression2
   16            | '-' T Expression2
   17            | /* empty */

   18 T: F T2

   19 T2: '/' F T2
   20   | '*' F T2
   21   | /* empty */

   22 F: exp F1

   23 F1: 'e' exp F1
   24   | /* empty */

   25 exp: 'n'
   26    | '(' Expression ')'
   27    | 'm' '[' Expression ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 26
')' (41) 26
'*' (42) 20
'+' (43) 15
'-' (45) 16
'/' (47) 19
':' (58) 8
'=' (61) 12
'[' (91) 12 27
']' (93) 12 27
'e' (101) 23
'g' (103) 9
'i' (105) 10
'l' (108) 8
'm' (109) 12 27
'n' (110) 8 9 25
'p' (112) 13
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 2
Statement (23)
    on left: 4 5 6 7, on right: 2
Label (24)
    on left: 8, on right: 4
Jump (25)
    on left: 9, on right: 5
Jump1 (26)
    on left: 10 11, on right: 9
Assignment (27)
    on left: 12, on right: 6
Print (28)
    on left: 13, on right: 7
Expression (29)
    on left: 14, on right: 10 12 13 26 27
Expression2 (30)
    on left: 15 16 17, on right: 14 15 16
T (31)
    on left: 18, on right: 14 15 16
T2 (32)
    on left: 19 20 21, on right: 18 19 20
F (33)
    on left: 22, on right: 18 19 20
F1 (34)
    on left: 23 24, on right: 22 23
exp (35)
    on left: 25 26 27, on right: 22 23


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 3 (Statements)

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

    9 Jump: 'g' . 'n' Jump1

    'n'  shift, and go to state 13


state 3

   12 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   13 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 18
    T           go to state 19
    F           go to state 20
    exp         go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statements .

    $default  reduce using rule 1 (Start)


state 7

    2 Statements: Statement . Statements

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 3 (Statements)

    Statements  go to state 23
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 8

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 9

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 10

    6 Statement: Assignment .

    $default  reduce using rule 6 (Statement)


state 11

    7 Statement: Print .

    $default  reduce using rule 7 (Statement)


state 12

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 24


state 13

    9 Jump: 'g' 'n' . Jump1

    'i'  shift, and go to state 25

    $default  reduce using rule 11 (Jump1)

    Jump1  go to state 26


state 14

   12 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 27
    T           go to state 19
    F           go to state 20
    exp         go to state 21


state 15

   25 exp: 'n' .

    $default  reduce using rule 25 (exp)


state 16

   27 exp: 'm' . '[' Expression ']'

    '['  shift, and go to state 28


state 17

   26 exp: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 29
    T           go to state 19
    F           go to state 20
    exp         go to state 21


state 18

   13 Print: 'p' Expression .

    $default  reduce using rule 13 (Print)


state 19

   14 Expression: T . Expression2

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 17 (Expression2)

    Expression2  go to state 32


state 20

   18 T: F . T2

    '/'  shift, and go to state 33
    '*'  shift, and go to state 34

    $default  reduce using rule 21 (T2)

    T2  go to state 35


state 21

   22 F: exp . F1

    'e'  shift, and go to state 36

    $default  reduce using rule 24 (F1)

    F1  go to state 37


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    2 Statements: Statement Statements .

    $default  reduce using rule 2 (Statements)


state 24

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 25

   10 Jump1: 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 38
    T           go to state 19
    F           go to state 20
    exp         go to state 21


state 26

    9 Jump: 'g' 'n' Jump1 .

    $default  reduce using rule 9 (Jump)


state 27

   12 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 39


state 28

   27 exp: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 40
    T           go to state 19
    F           go to state 20
    exp         go to state 21


state 29

   26 exp: '(' Expression . ')'

    ')'  shift, and go to state 41


state 30

   15 Expression2: '+' . T Expression2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    T    go to state 42
    F    go to state 20
    exp  go to state 21


state 31

   16 Expression2: '-' . T Expression2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    T    go to state 43
    F    go to state 20
    exp  go to state 21


state 32

   14 Expression: T Expression2 .

    $default  reduce using rule 14 (Expression)


state 33

   19 T2: '/' . F T2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    F    go to state 44
    exp  go to state 21


state 34

   20 T2: '*' . F T2

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    F    go to state 45
    exp  go to state 21


state 35

   18 T: F T2 .

    $default  reduce using rule 18 (T)


state 36

   23 F1: 'e' . exp F1

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    exp  go to state 46


state 37

   22 F: exp F1 .

    $default  reduce using rule 22 (F)


state 38

   10 Jump1: 'i' Expression .

    $default  reduce using rule 10 (Jump1)


state 39

   12 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 47


state 40

   27 exp: 'm' '[' Expression . ']'

    ']'  shift, and go to state 48


state 41

   26 exp: '(' Expression ')' .

    $default  reduce using rule 26 (exp)


state 42

   15 Expression2: '+' T . Expression2

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 17 (Expression2)

    Expression2  go to state 49


state 43

   16 Expression2: '-' T . Expression2

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 17 (Expression2)

    Expression2  go to state 50


state 44

   19 T2: '/' F . T2

    '/'  shift, and go to state 33
    '*'  shift, and go to state 34

    $default  reduce using rule 21 (T2)

    T2  go to state 51


state 45

   20 T2: '*' F . T2

    '/'  shift, and go to state 33
    '*'  shift, and go to state 34

    $default  reduce using rule 21 (T2)

    T2  go to state 52


state 46

   23 F1: 'e' exp . F1

    'e'  shift, and go to state 36

    $default  reduce using rule 24 (F1)

    F1  go to state 53


state 47

   12 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 54
    T           go to state 19
    F           go to state 20
    exp         go to state 21


state 48

   27 exp: 'm' '[' Expression ']' .

    $default  reduce using rule 27 (exp)


state 49

   15 Expression2: '+' T Expression2 .

    $default  reduce using rule 15 (Expression2)


state 50

   16 Expression2: '-' T Expression2 .

    $default  reduce using rule 16 (Expression2)


state 51

   19 T2: '/' F T2 .

    $default  reduce using rule 19 (T2)


state 52

   20 T2: '*' F T2 .

    $default  reduce using rule 20 (T2)


state 53

   23 F1: 'e' exp F1 .

    $default  reduce using rule 23 (F1)


state 54

   12 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 12 (Assignment)
