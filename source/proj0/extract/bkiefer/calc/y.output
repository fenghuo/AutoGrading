Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: List
    3           | /* empty */

    4 List: Statement Statements

    5 Statement: 'l' Label
    6          | 'g' 'n' Jump
    7          | 'm' Assignment
    8          | 'p' Print

    9 Label: 'n' ':'

   10 Jump: 'i' Expression
   11     | /* empty */

   12 Assignment: '[' Expression ']' '=' Expression

   13 Print: Expression

   14 Expression: Expr ExpressionP

   15 ExpressionP: '+' Expr ExpressionP
   16            | '-' Expr ExpressionP
   17            | /* empty */

   18 Expr: Term ExprP

   19 ExprP: '*' Term ExprP
   20      | '/' Term ExprP
   21      | /* empty */

   22 Term: Factor TermP

   23 TermP: 'e' Term
   24      | /* empty */

   25 Factor: '(' Expression ')'
   26       | 'm' '[' Expression ']'
   27       | 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 25
')' (41) 25
'*' (42) 19
'+' (43) 15
'-' (45) 16
'/' (47) 20
':' (58) 9
'=' (61) 12
'[' (91) 12 26
']' (93) 12 26
'e' (101) 23
'g' (103) 6
'i' (105) 10
'l' (108) 5
'm' (109) 7 26
'n' (110) 6 9 27
'p' (112) 8
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 4
List (23)
    on left: 4, on right: 2
Statement (24)
    on left: 5 6 7 8, on right: 4
Label (25)
    on left: 9, on right: 5
Jump (26)
    on left: 10 11, on right: 6
Assignment (27)
    on left: 12, on right: 7
Print (28)
    on left: 13, on right: 8
Expression (29)
    on left: 14, on right: 10 12 13 25 26
ExpressionP (30)
    on left: 15 16 17, on right: 14 15 16
Expr (31)
    on left: 18, on right: 14 15 16
ExprP (32)
    on left: 19 20 21, on right: 18 19 20
Term (33)
    on left: 22, on right: 18 19 20 23
TermP (34)
    on left: 23 24, on right: 22
Factor (35)
    on left: 25 26 27, on right: 22


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 3 (Statements)

    Start       go to state 5
    Statements  go to state 6
    List        go to state 7
    Statement   go to state 8


state 1

    5 Statement: 'l' . Label

    'n'  shift, and go to state 9

    Label  go to state 10


state 2

    6 Statement: 'g' . 'n' Jump

    'n'  shift, and go to state 11


state 3

    7 Statement: 'm' . Assignment

    '['  shift, and go to state 12

    Assignment  go to state 13


state 4

    8 Statement: 'p' . Print

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Print       go to state 17
    Expression  go to state 18
    Expr        go to state 19
    Term        go to state 20
    Factor      go to state 21


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 22


state 6

    1 Start: Statements .

    $default  reduce using rule 1 (Start)


state 7

    2 Statements: List .

    $default  reduce using rule 2 (Statements)


state 8

    4 List: Statement . Statements

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 3 (Statements)

    Statements  go to state 23
    List        go to state 7
    Statement   go to state 8


state 9

    9 Label: 'n' . ':'

    ':'  shift, and go to state 24


state 10

    5 Statement: 'l' Label .

    $default  reduce using rule 5 (Statement)


state 11

    6 Statement: 'g' 'n' . Jump

    'i'  shift, and go to state 25

    $default  reduce using rule 11 (Jump)

    Jump  go to state 26


state 12

   12 Assignment: '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Expression  go to state 27
    Expr        go to state 19
    Term        go to state 20
    Factor      go to state 21


state 13

    7 Statement: 'm' Assignment .

    $default  reduce using rule 7 (Statement)


state 14

   27 Factor: 'n' .

    $default  reduce using rule 27 (Factor)


state 15

   26 Factor: 'm' . '[' Expression ']'

    '['  shift, and go to state 28


state 16

   25 Factor: '(' . Expression ')'

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Expression  go to state 29
    Expr        go to state 19
    Term        go to state 20
    Factor      go to state 21


state 17

    8 Statement: 'p' Print .

    $default  reduce using rule 8 (Statement)


state 18

   13 Print: Expression .

    $default  reduce using rule 13 (Print)


state 19

   14 Expression: Expr . ExpressionP

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 17 (ExpressionP)

    ExpressionP  go to state 32


state 20

   18 Expr: Term . ExprP

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 21 (ExprP)

    ExprP  go to state 35


state 21

   22 Term: Factor . TermP

    'e'  shift, and go to state 36

    $default  reduce using rule 24 (TermP)

    TermP  go to state 37


state 22

    0 $accept: Start $end .

    $default  accept


state 23

    4 List: Statement Statements .

    $default  reduce using rule 4 (List)


state 24

    9 Label: 'n' ':' .

    $default  reduce using rule 9 (Label)


state 25

   10 Jump: 'i' . Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Expression  go to state 38
    Expr        go to state 19
    Term        go to state 20
    Factor      go to state 21


state 26

    6 Statement: 'g' 'n' Jump .

    $default  reduce using rule 6 (Statement)


state 27

   12 Assignment: '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 39


state 28

   26 Factor: 'm' '[' . Expression ']'

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Expression  go to state 40
    Expr        go to state 19
    Term        go to state 20
    Factor      go to state 21


state 29

   25 Factor: '(' Expression . ')'

    ')'  shift, and go to state 41


state 30

   15 ExpressionP: '+' . Expr ExpressionP

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Expr    go to state 42
    Term    go to state 20
    Factor  go to state 21


state 31

   16 ExpressionP: '-' . Expr ExpressionP

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Expr    go to state 43
    Term    go to state 20
    Factor  go to state 21


state 32

   14 Expression: Expr ExpressionP .

    $default  reduce using rule 14 (Expression)


state 33

   19 ExprP: '*' . Term ExprP

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Term    go to state 44
    Factor  go to state 21


state 34

   20 ExprP: '/' . Term ExprP

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Term    go to state 45
    Factor  go to state 21


state 35

   18 Expr: Term ExprP .

    $default  reduce using rule 18 (Expr)


state 36

   23 TermP: 'e' . Term

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Term    go to state 46
    Factor  go to state 21


state 37

   22 Term: Factor TermP .

    $default  reduce using rule 22 (Term)


state 38

   10 Jump: 'i' Expression .

    $default  reduce using rule 10 (Jump)


state 39

   12 Assignment: '[' Expression ']' . '=' Expression

    '='  shift, and go to state 47


state 40

   26 Factor: 'm' '[' Expression . ']'

    ']'  shift, and go to state 48


state 41

   25 Factor: '(' Expression ')' .

    $default  reduce using rule 25 (Factor)


state 42

   15 ExpressionP: '+' Expr . ExpressionP

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 17 (ExpressionP)

    ExpressionP  go to state 49


state 43

   16 ExpressionP: '-' Expr . ExpressionP

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31

    $default  reduce using rule 17 (ExpressionP)

    ExpressionP  go to state 50


state 44

   19 ExprP: '*' Term . ExprP

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 21 (ExprP)

    ExprP  go to state 51


state 45

   20 ExprP: '/' Term . ExprP

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 21 (ExprP)

    ExprP  go to state 52


state 46

   23 TermP: 'e' Term .

    $default  reduce using rule 23 (TermP)


state 47

   12 Assignment: '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    Expression  go to state 53
    Expr        go to state 19
    Term        go to state 20
    Factor      go to state 21


state 48

   26 Factor: 'm' '[' Expression ']' .

    $default  reduce using rule 26 (Factor)


state 49

   15 ExpressionP: '+' Expr ExpressionP .

    $default  reduce using rule 15 (ExpressionP)


state 50

   16 ExpressionP: '-' Expr ExpressionP .

    $default  reduce using rule 16 (ExpressionP)


state 51

   19 ExprP: '*' Term ExprP .

    $default  reduce using rule 19 (ExprP)


state 52

   20 ExprP: '/' Term ExprP .

    $default  reduce using rule 20 (ExprP)


state 53

   12 Assignment: '[' Expression ']' '=' Expression .

    $default  reduce using rule 12 (Assignment)
