Grammar

    0 $accept: Start $end

    1 Start: Statement

    2 Statement: Label
    3          | Jump
    4          | Assignment
    5          | Print

    6 Label: 'l' 'n' ':'

    7 Jump: 'g' 'n'
    8     | 'g' 'n' 'i' Expression

    9 Assignment: 'm' '[' Expression ']' '=' Expression

   10 Print: 'p' Expression

   11 Expression: Term Expression2

   12 Expression2: /* empty */
   13            | '+' Expression
   14            | '-' Expression

   15 Term: Factor Term3

   16 Term2: /* empty */
   17      | '*' Term
   18      | '/' Term

   19 Term3: /* empty */
   20      | 'e' Term2

   21 Factor: /* empty */
   22       | '(' Expression ')'
   23       | 'm' '[' Expression ']'
   24       | 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22
')' (41) 22
'*' (42) 17
'+' (43) 13
'-' (45) 14
'/' (47) 18
':' (58) 6
'=' (61) 9
'[' (91) 9 23
']' (93) 9 23
'e' (101) 20
'g' (103) 7 8
'i' (105) 8
'l' (108) 6
'm' (109) 9 23
'n' (110) 6 7 8 24
'p' (112) 10
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statement (22)
    on left: 2 3 4 5, on right: 1
Label (23)
    on left: 6, on right: 2
Jump (24)
    on left: 7 8, on right: 3
Assignment (25)
    on left: 9, on right: 4
Print (26)
    on left: 10, on right: 5
Expression (27)
    on left: 11, on right: 8 9 10 13 14 22 23
Expression2 (28)
    on left: 12 13 14, on right: 11
Term (29)
    on left: 15, on right: 11 17 18
Term2 (30)
    on left: 16 17 18, on right: 20
Term3 (31)
    on left: 19 20, on right: 15
Factor (32)
    on left: 21 22 23 24, on right: 15


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statement   go to state 6
    Label       go to state 7
    Jump        go to state 8
    Assignment  go to state 9
    Print       go to state 10


state 1

    6 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 11


state 2

    7 Jump: 'g' . 'n'
    8     | 'g' . 'n' 'i' Expression

    'n'  shift, and go to state 12


state 3

    9 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 13


state 4

   10 Print: 'p' . Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Expression  go to state 17
    Term        go to state 18
    Factor      go to state 19


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 20


state 6

    1 Start: Statement .

    $default  reduce using rule 1 (Start)


state 7

    2 Statement: Label .

    $default  reduce using rule 2 (Statement)


state 8

    3 Statement: Jump .

    $default  reduce using rule 3 (Statement)


state 9

    4 Statement: Assignment .

    $default  reduce using rule 4 (Statement)


state 10

    5 Statement: Print .

    $default  reduce using rule 5 (Statement)


state 11

    6 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 21


state 12

    7 Jump: 'g' 'n' .
    8     | 'g' 'n' . 'i' Expression

    'i'  shift, and go to state 22

    $default  reduce using rule 7 (Jump)


state 13

    9 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Expression  go to state 23
    Term        go to state 18
    Factor      go to state 19


state 14

   24 Factor: 'n' .

    $default  reduce using rule 24 (Factor)


state 15

   23 Factor: 'm' . '[' Expression ']'

    '['  shift, and go to state 24


state 16

   22 Factor: '(' . Expression ')'

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Expression  go to state 25
    Term        go to state 18
    Factor      go to state 19


state 17

   10 Print: 'p' Expression .

    $default  reduce using rule 10 (Print)


state 18

   11 Expression: Term . Expression2

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27

    $default  reduce using rule 12 (Expression2)

    Expression2  go to state 28


state 19

   15 Term: Factor . Term3

    'e'  shift, and go to state 29

    $default  reduce using rule 19 (Term3)

    Term3  go to state 30


state 20

    0 $accept: Start $end .

    $default  accept


state 21

    6 Label: 'l' 'n' ':' .

    $default  reduce using rule 6 (Label)


state 22

    8 Jump: 'g' 'n' 'i' . Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Expression  go to state 31
    Term        go to state 18
    Factor      go to state 19


state 23

    9 Assignment: 'm' '[' Expression . ']' '=' Expression

    ']'  shift, and go to state 32


state 24

   23 Factor: 'm' '[' . Expression ']'

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Expression  go to state 33
    Term        go to state 18
    Factor      go to state 19


state 25

   22 Factor: '(' Expression . ')'

    ')'  shift, and go to state 34


state 26

   13 Expression2: '+' . Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Expression  go to state 35
    Term        go to state 18
    Factor      go to state 19


state 27

   14 Expression2: '-' . Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Expression  go to state 36
    Term        go to state 18
    Factor      go to state 19


state 28

   11 Expression: Term Expression2 .

    $default  reduce using rule 11 (Expression)


state 29

   20 Term3: 'e' . Term2

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 16 (Term2)

    Term2  go to state 39


state 30

   15 Term: Factor Term3 .

    $default  reduce using rule 15 (Term)


state 31

    8 Jump: 'g' 'n' 'i' Expression .

    $default  reduce using rule 8 (Jump)


state 32

    9 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 40


state 33

   23 Factor: 'm' '[' Expression . ']'

    ']'  shift, and go to state 41


state 34

   22 Factor: '(' Expression ')' .

    $default  reduce using rule 22 (Factor)


state 35

   13 Expression2: '+' Expression .

    $default  reduce using rule 13 (Expression2)


state 36

   14 Expression2: '-' Expression .

    $default  reduce using rule 14 (Expression2)


state 37

   17 Term2: '*' . Term

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Term    go to state 42
    Factor  go to state 19


state 38

   18 Term2: '/' . Term

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Term    go to state 43
    Factor  go to state 19


state 39

   20 Term3: 'e' Term2 .

    $default  reduce using rule 20 (Term3)


state 40

    9 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 14
    'm'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (Factor)

    Expression  go to state 44
    Term        go to state 18
    Factor      go to state 19


state 41

   23 Factor: 'm' '[' Expression ']' .

    $default  reduce using rule 23 (Factor)


state 42

   17 Term2: '*' Term .

    $default  reduce using rule 17 (Term2)


state 43

   18 Term2: '/' Term .

    $default  reduce using rule 18 (Term2)


state 44

    9 Assignment: 'm' '[' Expression ']' '=' Expression .

    $default  reduce using rule 9 (Assignment)
