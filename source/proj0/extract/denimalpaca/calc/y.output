State 18 conflicts: 5 shift/reduce, 5 reduce/reduce
State 25 conflicts: 6 shift/reduce
State 27 conflicts: 6 shift/reduce
State 28 conflicts: 5 shift/reduce
State 29 conflicts: 5 shift/reduce
State 30 conflicts: 5 shift/reduce
State 31 conflicts: 5 shift/reduce
State 32 conflicts: 5 shift/reduce
State 35 conflicts: 5 shift/reduce, 5 reduce/reduce
State 37 conflicts: 6 shift/reduce
State 46 conflicts: 5 shift/reduce, 5 reduce/reduce


Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statements Statement
    3           | Statement

    4 Statement: Label
    5          | Jump
    6          | Assignment
    7          | Print

    8 Label: 'l' 'n' ':'

    9 Jump: 'g' 'n' Jump_p

   10 Jump_p: 'i' Expression
   11       | epsilon

   12 Assignment: 'm' '[' Expression ']' '=' Expression

   13 Print: 'p' Expression

   14 Expression: Expression Expression_p
   15           | '(' Expression ')'
   16           | 'm' '[' Expression ']'
   17           | 'n'

   18 Expression_p: '+' Expression_p
   19             | '-' Expression_p
   20             | '*' Expression_p
   21             | '/' Expression_p
   22             | 'e' Expression_p
   23             | epsilon

   24 epsilon: /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15
')' (41) 15
'*' (42) 20
'+' (43) 18
'-' (45) 19
'/' (47) 21
':' (58) 8
'=' (61) 12
'[' (91) 12 16
']' (93) 12 16
'e' (101) 22
'g' (103) 9
'i' (105) 10
'l' (108) 8
'm' (109) 12 16
'n' (110) 8 9 17
'p' (112) 13
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 2
Statement (23)
    on left: 4 5 6 7, on right: 2 3
Label (24)
    on left: 8, on right: 4
Jump (25)
    on left: 9, on right: 5
Jump_p (26)
    on left: 10 11, on right: 9
Assignment (27)
    on left: 12, on right: 6
Print (28)
    on left: 13, on right: 7
Expression (29)
    on left: 14 15 16 17, on right: 10 12 13 14 15 16
Expression_p (30)
    on left: 18 19 20 21 22 23, on right: 14 18 19 20 21 22
epsilon (31)
    on left: 24, on right: 11 23


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    Start       go to state 5
    Statements  go to state 6
    Statement   go to state 7
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 1

    8 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 12


state 2

    9 Jump: 'g' . 'n' Jump_p

    'n'  shift, and go to state 13


state 3

   12 Assignment: 'm' . '[' Expression ']' '=' Expression

    '['  shift, and go to state 14


state 4

   13 Print: 'p' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 18


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 19


state 6

    1 Start: Statements .
    2 Statements: Statements . Statement

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2
    'm'  shift, and go to state 3
    'p'  shift, and go to state 4

    $default  reduce using rule 1 (Start)

    Statement   go to state 20
    Label       go to state 8
    Jump        go to state 9
    Assignment  go to state 10
    Print       go to state 11


state 7

    3 Statements: Statement .

    $default  reduce using rule 3 (Statements)


state 8

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 9

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 10

    6 Statement: Assignment .

    $default  reduce using rule 6 (Statement)


state 11

    7 Statement: Print .

    $default  reduce using rule 7 (Statement)


state 12

    8 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 21


state 13

    9 Jump: 'g' 'n' . Jump_p

    'i'  shift, and go to state 22

    $default  reduce using rule 24 (epsilon)

    Jump_p   go to state 23
    epsilon  go to state 24


state 14

   12 Assignment: 'm' '[' . Expression ']' '=' Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 25


state 15

   17 Expression: 'n' .

    $default  reduce using rule 17 (Expression)


state 16

   16 Expression: 'm' . '[' Expression ']'

    '['  shift, and go to state 26


state 17

   15 Expression: '(' . Expression ')'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 27


state 18

   13 Print: 'p' Expression .
   14 Expression: Expression . Expression_p

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    $end      reduce using rule 13 (Print)
    $end      [reduce using rule 24 (epsilon)]
    'l'       reduce using rule 13 (Print)
    'l'       [reduce using rule 24 (epsilon)]
    'g'       reduce using rule 13 (Print)
    'g'       [reduce using rule 24 (epsilon)]
    'm'       reduce using rule 13 (Print)
    'm'       [reduce using rule 24 (epsilon)]
    'p'       reduce using rule 13 (Print)
    'p'       [reduce using rule 24 (epsilon)]
    '+'       [reduce using rule 24 (epsilon)]
    '-'       [reduce using rule 24 (epsilon)]
    '*'       [reduce using rule 24 (epsilon)]
    '/'       [reduce using rule 24 (epsilon)]
    'e'       [reduce using rule 24 (epsilon)]
    $default  reduce using rule 13 (Print)

    Expression_p  go to state 33
    epsilon       go to state 34


state 19

    0 $accept: Start $end .

    $default  accept


state 20

    2 Statements: Statements Statement .

    $default  reduce using rule 2 (Statements)


state 21

    8 Label: 'l' 'n' ':' .

    $default  reduce using rule 8 (Label)


state 22

   10 Jump_p: 'i' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 35


state 23

    9 Jump: 'g' 'n' Jump_p .

    $default  reduce using rule 9 (Jump)


state 24

   11 Jump_p: epsilon .

    $default  reduce using rule 11 (Jump_p)


state 25

   12 Assignment: 'm' '[' Expression . ']' '=' Expression
   14 Expression: Expression . Expression_p

    ']'  shift, and go to state 36
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    ']'  [reduce using rule 24 (epsilon)]
    '+'  [reduce using rule 24 (epsilon)]
    '-'  [reduce using rule 24 (epsilon)]
    '*'  [reduce using rule 24 (epsilon)]
    '/'  [reduce using rule 24 (epsilon)]
    'e'  [reduce using rule 24 (epsilon)]

    Expression_p  go to state 33
    epsilon       go to state 34


state 26

   16 Expression: 'm' '[' . Expression ']'

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 37


state 27

   14 Expression: Expression . Expression_p
   15           | '(' Expression . ')'

    ')'  shift, and go to state 38
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    ')'  [reduce using rule 24 (epsilon)]
    '+'  [reduce using rule 24 (epsilon)]
    '-'  [reduce using rule 24 (epsilon)]
    '*'  [reduce using rule 24 (epsilon)]
    '/'  [reduce using rule 24 (epsilon)]
    'e'  [reduce using rule 24 (epsilon)]

    Expression_p  go to state 33
    epsilon       go to state 34


state 28

   18 Expression_p: '+' . Expression_p

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    '+'       [reduce using rule 24 (epsilon)]
    '-'       [reduce using rule 24 (epsilon)]
    '*'       [reduce using rule 24 (epsilon)]
    '/'       [reduce using rule 24 (epsilon)]
    'e'       [reduce using rule 24 (epsilon)]
    $default  reduce using rule 24 (epsilon)

    Expression_p  go to state 39
    epsilon       go to state 34


state 29

   19 Expression_p: '-' . Expression_p

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    '+'       [reduce using rule 24 (epsilon)]
    '-'       [reduce using rule 24 (epsilon)]
    '*'       [reduce using rule 24 (epsilon)]
    '/'       [reduce using rule 24 (epsilon)]
    'e'       [reduce using rule 24 (epsilon)]
    $default  reduce using rule 24 (epsilon)

    Expression_p  go to state 40
    epsilon       go to state 34


state 30

   20 Expression_p: '*' . Expression_p

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    '+'       [reduce using rule 24 (epsilon)]
    '-'       [reduce using rule 24 (epsilon)]
    '*'       [reduce using rule 24 (epsilon)]
    '/'       [reduce using rule 24 (epsilon)]
    'e'       [reduce using rule 24 (epsilon)]
    $default  reduce using rule 24 (epsilon)

    Expression_p  go to state 41
    epsilon       go to state 34


state 31

   21 Expression_p: '/' . Expression_p

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    '+'       [reduce using rule 24 (epsilon)]
    '-'       [reduce using rule 24 (epsilon)]
    '*'       [reduce using rule 24 (epsilon)]
    '/'       [reduce using rule 24 (epsilon)]
    'e'       [reduce using rule 24 (epsilon)]
    $default  reduce using rule 24 (epsilon)

    Expression_p  go to state 42
    epsilon       go to state 34


state 32

   22 Expression_p: 'e' . Expression_p

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    '+'       [reduce using rule 24 (epsilon)]
    '-'       [reduce using rule 24 (epsilon)]
    '*'       [reduce using rule 24 (epsilon)]
    '/'       [reduce using rule 24 (epsilon)]
    'e'       [reduce using rule 24 (epsilon)]
    $default  reduce using rule 24 (epsilon)

    Expression_p  go to state 43
    epsilon       go to state 34


state 33

   14 Expression: Expression Expression_p .

    $default  reduce using rule 14 (Expression)


state 34

   23 Expression_p: epsilon .

    $default  reduce using rule 23 (Expression_p)


state 35

   10 Jump_p: 'i' Expression .
   14 Expression: Expression . Expression_p

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    $end      reduce using rule 10 (Jump_p)
    $end      [reduce using rule 24 (epsilon)]
    'l'       reduce using rule 10 (Jump_p)
    'l'       [reduce using rule 24 (epsilon)]
    'g'       reduce using rule 10 (Jump_p)
    'g'       [reduce using rule 24 (epsilon)]
    'm'       reduce using rule 10 (Jump_p)
    'm'       [reduce using rule 24 (epsilon)]
    'p'       reduce using rule 10 (Jump_p)
    'p'       [reduce using rule 24 (epsilon)]
    '+'       [reduce using rule 24 (epsilon)]
    '-'       [reduce using rule 24 (epsilon)]
    '*'       [reduce using rule 24 (epsilon)]
    '/'       [reduce using rule 24 (epsilon)]
    'e'       [reduce using rule 24 (epsilon)]
    $default  reduce using rule 10 (Jump_p)

    Expression_p  go to state 33
    epsilon       go to state 34


state 36

   12 Assignment: 'm' '[' Expression ']' . '=' Expression

    '='  shift, and go to state 44


state 37

   14 Expression: Expression . Expression_p
   16           | 'm' '[' Expression . ']'

    ']'  shift, and go to state 45
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    ']'  [reduce using rule 24 (epsilon)]
    '+'  [reduce using rule 24 (epsilon)]
    '-'  [reduce using rule 24 (epsilon)]
    '*'  [reduce using rule 24 (epsilon)]
    '/'  [reduce using rule 24 (epsilon)]
    'e'  [reduce using rule 24 (epsilon)]

    Expression_p  go to state 33
    epsilon       go to state 34


state 38

   15 Expression: '(' Expression ')' .

    $default  reduce using rule 15 (Expression)


state 39

   18 Expression_p: '+' Expression_p .

    $default  reduce using rule 18 (Expression_p)


state 40

   19 Expression_p: '-' Expression_p .

    $default  reduce using rule 19 (Expression_p)


state 41

   20 Expression_p: '*' Expression_p .

    $default  reduce using rule 20 (Expression_p)


state 42

   21 Expression_p: '/' Expression_p .

    $default  reduce using rule 21 (Expression_p)


state 43

   22 Expression_p: 'e' Expression_p .

    $default  reduce using rule 22 (Expression_p)


state 44

   12 Assignment: 'm' '[' Expression ']' '=' . Expression

    'n'  shift, and go to state 15
    'm'  shift, and go to state 16
    '('  shift, and go to state 17

    Expression  go to state 46


state 45

   16 Expression: 'm' '[' Expression ']' .

    $default  reduce using rule 16 (Expression)


state 46

   12 Assignment: 'm' '[' Expression ']' '=' Expression .
   14 Expression: Expression . Expression_p

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    'e'  shift, and go to state 32

    $end      reduce using rule 12 (Assignment)
    $end      [reduce using rule 24 (epsilon)]
    'l'       reduce using rule 12 (Assignment)
    'l'       [reduce using rule 24 (epsilon)]
    'g'       reduce using rule 12 (Assignment)
    'g'       [reduce using rule 24 (epsilon)]
    'm'       reduce using rule 12 (Assignment)
    'm'       [reduce using rule 24 (epsilon)]
    'p'       reduce using rule 12 (Assignment)
    'p'       [reduce using rule 24 (epsilon)]
    '+'       [reduce using rule 24 (epsilon)]
    '-'       [reduce using rule 24 (epsilon)]
    '*'       [reduce using rule 24 (epsilon)]
    '/'       [reduce using rule 24 (epsilon)]
    'e'       [reduce using rule 24 (epsilon)]
    $default  reduce using rule 12 (Assignment)

    Expression_p  go to state 33
    epsilon       go to state 34
