Nonterminals useless in grammar

   Assignment
   Print
   Expression
   Test
   Term


Terminals unused in grammar

   'i'
   'm'
   '['
   ']'
   '='
   'p'
   '-'
   '*'
   '/'
   'e'
   '('
   ')'
   '+'


Rules useless in grammar

    8 Statement: Assignment
    9          | Print

   10 Jump: 'g' 'n' 'i' Expression

   11 Assignment: 'm' '[' Expression ']' '=' Expression

   12 Print: 'p' Expression

   13 Expression: Term Test

   14 Test: Expression '-' Expression
   15     | Expression '*' Expression
   16     | Expression '/' Expression
   17     | Expression 'e' Expression
   18     | '(' Expression ')'
   19     | 'm' '[' Expression ']'
   20     | 'n'

   21 Term: '+' Expression


Grammar

    0 $accept: Start $end

    1 Start: Statements

    2 Statements: Statements Statement
    3           | Statement

    4 Statement: Label
    5          | Jump

    6 Label: 'l' 'n' ':'

    7 Jump: 'g' 'n'


Terminals, with rules where they appear

$end (0) 0
'(' (40)
')' (41)
'*' (42)
'+' (43)
'-' (45)
'/' (47)
':' (58) 6
'=' (61)
'[' (91)
']' (93)
'e' (101)
'g' (103) 7
'i' (105)
'l' (108) 6
'm' (109)
'n' (110) 6 7
'p' (112)
error (256)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Start (21)
    on left: 1, on right: 0
Statements (22)
    on left: 2 3, on right: 1 2
Statement (23)
    on left: 4 5, on right: 2 3
Label (24)
    on left: 6, on right: 4
Jump (25)
    on left: 7, on right: 5


state 0

    0 $accept: . Start $end

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2

    Start       go to state 3
    Statements  go to state 4
    Statement   go to state 5
    Label       go to state 6
    Jump        go to state 7


state 1

    6 Label: 'l' . 'n' ':'

    'n'  shift, and go to state 8


state 2

    7 Jump: 'g' . 'n'

    'n'  shift, and go to state 9


state 3

    0 $accept: Start . $end

    $end  shift, and go to state 10


state 4

    1 Start: Statements .
    2 Statements: Statements . Statement

    'l'  shift, and go to state 1
    'g'  shift, and go to state 2

    $default  reduce using rule 1 (Start)

    Statement  go to state 11
    Label      go to state 6
    Jump       go to state 7


state 5

    3 Statements: Statement .

    $default  reduce using rule 3 (Statements)


state 6

    4 Statement: Label .

    $default  reduce using rule 4 (Statement)


state 7

    5 Statement: Jump .

    $default  reduce using rule 5 (Statement)


state 8

    6 Label: 'l' 'n' . ':'

    ':'  shift, and go to state 12


state 9

    7 Jump: 'g' 'n' .

    $default  reduce using rule 7 (Jump)


state 10

    0 $accept: Start $end .

    $default  accept


state 11

    2 Statements: Statements Statement .

    $default  reduce using rule 2 (Statements)


state 12

    6 Label: 'l' 'n' ':' .

    $default  reduce using rule 6 (Label)
